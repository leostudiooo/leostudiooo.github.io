import{_ as u}from"./ValaxyMain.vue_vue_type_style_index_0_lang.DcdqS0Rk.js";import"./chunks/@vueuse/motion.DBdTyeDO.js";import{d as E,a as g}from"./chunks/vue-router.Cokgg8wU.js";import{a0 as d,a4 as m,a6 as a,a7 as t,a8 as e,a9 as i,w as y,a5 as b}from"./framework.DJFiUfUu.js";import"./app.Bj8jZgcM.js";import"./chunks/dayjs.BX5x0S-s.js";import"./chunks/nprogress.DgHbq1gC.js";import"./chunks/vue-i18n.DbbYQ02x.js";import"./chunks/pinia.DWtjS6du.js";import"./YunComment.vue_vue_type_style_index_0_lang.C-Q0vOuB.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang.BqZ9mhwh.js";import"./post.CPJgGx_p.js";const C=E("/posts/wechat-miniapp-token",async n=>JSON.parse('{"title":"记抓取小程序用户 Token","description":"","frontmatter":{"layout":"post","title":"记抓取小程序用户 Token","tags":["微信小程序","token","技术"],"categories":["教程","技术"],"date":"2025-05-15 10:02:11","type":"github","url":"https://github.com/leostudiooo/GOOSE"},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"获取 Token","slug":"获取-token","link":"#获取-token","children":[{"level":3,"title":"Token 的结构","slug":"token-的结构","link":"#token-的结构","children":[]},{"level":3,"title":"使用 Cheat Engine 抓取小程序内存中的 Token","slug":"使用-cheat-engine-抓取小程序内存中的-token","link":"#使用-cheat-engine-抓取小程序内存中的-token","children":[]},{"level":3,"title":"抓包获取","slug":"抓包获取","link":"#抓包获取","children":[]}]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"relativePath":"pages/posts/wechat-miniapp-token.md","lastUpdated":1758728448000}'),{lazy:(n,o)=>n.name===o.name}),A={__name:"wechat-miniapp-token",setup(n,{expose:o}){var k;const{data:r}=C(),h=g(),l=Object.assign(h.meta.frontmatter||{},((k=r.value)==null?void 0:k.frontmatter)||{});return h.meta.frontmatter=l,d("pageData",r.value),d("valaxy:frontmatter",l),globalThis.$frontmatter=l,o({frontmatter:{layout:"post",title:"记抓取小程序用户 Token",tags:["微信小程序","token","技术"],categories:["教程","技术"],date:"2025-05-15 10:02:11",type:"github",url:"https://github.com/leostudiooo/GOOSE"}}),(s,p)=>{const c=u;return b(),m(c,{frontmatter:y(l)},{"main-content-md":a(()=>p[0]||(p[0]=[e("h2",{id:"前言",tabindex:"-1"},[i("前言 "),e("a",{class:"header-anchor",href:"#前言","aria-label":'Permalink to "前言"'},"​")],-1),e("p",null,"之前看到一个项目 SEU_exercise，通过使用 Cheat Engine 搜索内存来获取跑操小程序的 token 来完成自动化跑操。但那是个闭源项目，最开始上传的是使用 Pyarmor 加密的代码。顺带一提，作者竟然拿这个玩意按使用次数收费，真是无耻。我当时特别生气，刚好看到这个项目下面有老哥 Issue 开团“#4 经典了开源付费“，作者竟然大言不惭回复了“如果您对开源或商业模式有疑问，欢迎私信进一步交流”，我就去跟了一嘴：",-1),e("blockquote",null,[e("p",null,"据我所知，在 run.py 和 validate.py 中的注释中"),e("div",{style:{"max-height":"300px"},class:"language-py vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"py"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Pyarmor 9.1.1 (trial), 000000, non-profits, 2025-04-22T21:05:48.576426")])])]),e("button",{class:"collapse"})]),e("p",null,"您所使用的 Pyarmor 9.1.1 试用版许可证的 使用条款 似乎并不允许您使用由 Pyarmor 加密的脚本进行营利行为哦？然后居然开始卖次数、收钱钱，连个皮包公司都没有，就把商业梦编进代码了，欸好厉害好厉害～"),e("p",null,"不过拜托拜托，下次至少买一个基础版授权好嘛？税后 CNY 359 的价格想必对您这样的商业天才来说一定也只是洒洒水而已哦？不然我都不好意思继续到 Wayback Machine 去 截图存档、fork 留纪念欸～"),e("p",null,"反手一个举报到 Pyarmor 或者体育系的话，大家都～不～会～好～过～哦？")],-1),e("p",null,[i("结果作者直接在下一个 commit 把加密源代码删掉了，改用 Nuitka 直接编译为了二进制，还加了个莫名其妙的“不允许逆向工程”的声明。但提交记录不会骗人，直接回退就可以看到原来 Pyarmor 的版本了。关于解密的过程又可以写一篇文章了，暂且按下不表。总之经过一些逆向工程和重构工作，"),e("code",null,"leostudiooo/OpenSEUExercise"),i(" 就诞生了；但好景不长。")],-1),e("p",null,"首先是在 2025 年 4 月 29 日，SEU_exercise 的作者将项目转为了 Public Archive；然后 5 月 6 日，财迷心窍、心胸狭隘的作者向 GitHub 提交了 DMCA（数字千年版权法）投诉，要求删除 OpenSEUExercise 及其所有 fork；于是在 5 月 8 日早上 6:00(GMT +8)，我收到了 GitHub 的邮件，称我的项目被删除了。虽然我和 LittleLittleGull（在逆向工程完成后对项目进行了大量的重构，因为原作者的代码质量实在是一言难尽）都留有本地备份，但我们仍然决定从头开始：一是为了避免潜在的法律纠纷（虽然他也不大可能真的告我，毕竟他自己的项目也是非法的；另外一旦我提交 counter notice，我的个人信息就会向他披露，这当然是有很大风险的）；二是反正重构也基本完成了，从头开始也很快。",-1),e("p",null,"总之，GOOSE (GOOSE Opens workOut for SEU undErgraduates) 就这样诞生了。出于设置一定的门槛来防止滥用的考虑，我没有在 GOOSE 的 README 中公开 token 的获取方法；于是放到这里。",-1),e("h2",{id:"获取-token",tabindex:"-1"},[i("获取 Token "),e("a",{class:"header-anchor",href:"#获取-token","aria-label":'Permalink to "获取 Token"'},"​")],-1),e("p",null,"实际上获取 token 的方法非常简单，只需要使用 Fiddler 或者 Charles 等抓包工具抓取小程序的请求即可。原项目中作者还给出了基于 Cheat Engine 的方法，实际上也就是在内存中搜索 token 的值。有时候找不到 token，还有一种通过抓取小程序 OpenID 然后用脚本模拟登录获取的方式（这种方式比较曲折，暂且不讲）。",-1),e("h3",{id:"token-的结构",tabindex:"-1"},[i("Token 的结构 "),e("a",{class:"header-anchor",href:"#token-的结构","aria-label":'Permalink to "Token 的结构"'},"​")],-1),e("p",null,"Token 的结构大致如下：",-1),e("div",{style:{"max-height":"300px"},class:"language- vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"}),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",null,"eyJ0eXAiOiJKc29uV2ViVG9rZW4iLCJhbGciOiJIUzI1NiJ9.一串base64.签名")])])]),e("button",{class:"collapse"})],-1),e("p",null,"这是标准 JSON Web Token (JWT) 格式，一共三段。第一段是头部，第二段是载荷，第三段是签名。",-1),e("p",null,"头部解码之后是一个 JSON 对象，包含了 token 的类型和签名加密算法：",-1),e("div",{style:{"max-height":"300px"},class:"language-json vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"json"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "typ"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"JsonWebToken"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "alg"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"HS256"')]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),e("button",{class:"collapse"})],-1),e("p",null,"载荷解码之后也是一个 JSON 对象，包含了姓名、token 类型、用户 ID、账号、过期时间和生效时间等信息：",-1),e("div",{style:{"max-height":"300px"},class:"language-json vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"json"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "name"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"XXX"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "token_type"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"token"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "userid"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"4766XXXXXXXXXXX335"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "account"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"2XXXXXXX8"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "exp"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1778516619"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "nbf"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1746980619")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),e("button",{class:"collapse"})],-1),e("p",null,"签名是用 HMAC SHA256 算法加密的，密钥尚不清楚。",-1),e("h3",{id:"使用-cheat-engine-抓取小程序内存中的-token",tabindex:"-1"},[i("使用 Cheat Engine 抓取小程序内存中的 Token "),e("a",{class:"header-anchor",href:"#使用-cheat-engine-抓取小程序内存中的-token","aria-label":'Permalink to "使用 Cheat Engine 抓取小程序内存中的 Token"'},"​")],-1),e("ol",null,[e("li",null,"打开小程序，登录账号，进入跑操页面。"),e("li",null,"打开 Cheat Engine，选择小程序的进程。"),e("li",null,[i("在 Cheat Engine 中搜索 "),e("code",null,"Bearer "),i("，选择 "),e("code",null,"String"),i(" 类型，点击 "),e("code",null,"First Scan"),i("。")])],-1),e("p",null,[i("这个时候应该就会有大概几个到十几个结果，其中会有一个是上面提到的 token 的值。别的搜索结果通常并不包含 token，可能是引用了 token 的变量名或者其他的字符串。总之，找到一个包含 "),e("code",null,"Bearer "),i(" 的字符串，右键点击，选择 "),e("code",null,"Browse this memory region"),i("，就可以看到 token 的值了。没有找到就多看几个，或者直接尝试使用 "),e("code",null,"eyJ0eXAiOiJKc29uV2ViVG9rZW4iLCJhbGciOiJIUzI1NiJ9"),i(" 作为搜索值（即 Token 的第一段），应该也能找到。")],-1),e("ol",{start:"4"},[e("li",null,"然后就可以复制 token 的值了。")],-1),e("h3",{id:"抓包获取",tabindex:"-1"},[i("抓包获取 "),e("a",{class:"header-anchor",href:"#抓包获取","aria-label":'Permalink to "抓包获取"'},"​")],-1),e("ol",null,[e("li",null,"打开 Fiddler 或者 Charles 等抓包工具，设置好代理。"),e("li",null,"打开小程序，登录账号，进入跑操页面。"),e("li",null,"在抓包工具中找到请求的 URL。"),e("li",null,[i("找到请求的 Header 中的 "),e("code",null,"Authorization"),i(" 字段，值就是 token 的值。")]),e("li",null,[i("复制 token 的值，去掉前面的 "),e("code",null,"Bearer "),i("，只保留后面的部分。")])],-1),e("h2",{id:"结语",tabindex:"-1"},[i("结语 "),e("a",{class:"header-anchor",href:"#结语","aria-label":'Permalink to "结语"'},"​")],-1),e("p",null,"看到这里你应该已经获取到 token 了，你可以直接把它放进配置文件中或者粘贴到 TUI 里面。接下来就可以使用 GOOSE 进行自动化跑操了。",-1),e("blockquote",null,[e("p",null,"自动虽好，可不要贪多哦。")],-1)])),"main-header":a(()=>[t(s.$slots,"main-header")]),"main-header-after":a(()=>[t(s.$slots,"main-header-after")]),"main-nav":a(()=>[t(s.$slots,"main-nav")]),"main-content-before":a(()=>[t(s.$slots,"main-content-before")]),"main-content":a(()=>[t(s.$slots,"main-content")]),"main-content-after":a(()=>[t(s.$slots,"main-content-after")]),"main-nav-before":a(()=>[t(s.$slots,"main-nav-before")]),"main-nav-after":a(()=>[t(s.$slots,"main-nav-after")]),comment:a(()=>[t(s.$slots,"comment")]),footer:a(()=>[t(s.$slots,"footer")]),aside:a(()=>[t(s.$slots,"aside")]),"aside-custom":a(()=>[t(s.$slots,"aside-custom")]),default:a(()=>[t(s.$slots,"default")]),_:3},8,["frontmatter"])}}};export{A as default,C as usePageData};
