<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeoStudio</title>
  
  
  <link href="https://leostudiooo.github.io/atom.xml" rel="self"/>
  
  <link href="https://leostudiooo.github.io/"/>
  <updated>2022-09-02T11:33:38.890Z</updated>
  <id>https://leostudiooo.github.io/</id>
  
  <author>
    <name>Lingfeng Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>瞎写点东西</title>
    <link href="https://leostudiooo.github.io/2022/09/01/blind-jb-write-sept-1/"/>
    <id>https://leostudiooo.github.io/2022/09/01/blind-jb-write-sept-1/</id>
    <published>2022-08-31T16:38:40.000Z</published>
    <updated>2022-09-02T11:33:38.890Z</updated>
    
    <content type="html"><![CDATA[<p>在略带凉意穿堂而过的秋风中传来了嘒嘒的，远远近近、此起彼伏的蝉鸣声。</p><p>蝉鸣音调很高，差不多 5 kHz；也很响，能到 80 dB。但似乎我从来没有过关于蝉鸣的记忆；有的只是在很小的时候读带插图的法布尔《昆虫记》时所留下的印象：蝉要在地下生长四年，然后自由自在地拥抱夏天，惬意地吸食树汁，直到一两个月以后走向生命的尽头。那时的我总幻想着能喝上蝉的同款饮料——法布尔说树汁又香又甜——不过恐怕这辈子是没机会了。</p><p>后来上了中学，学了《蝉》，不过似乎跟小时候读到的完全不同：多了一丝严谨，少了一点纯真。</p><blockquote><p>四年黑暗中的苦工，一个月阳光下的享乐，这就是蝉的生活。我们不应当讨厌它那喧嚣的歌声，因为它掘土四年，现在才能够穿起漂亮的衣服，长起可与飞鸟匹敌的翅膀，沐浴在温暖的阳光中。什么样的钹声能响亮到足以歌颂它那得来不易的刹那欢愉呢？</p></blockquote><p>当时对这段话没有什么体会，也没有什么兴味，但过了这么一段时间再来细品，倒是感受到了生命的脉搏。其实四年多的时间对于蝉也足够长了，然而这一个月的享乐确是极其短暂的。</p><p>又想到人。一友人这么跟我聊过：在 RPG 游戏里面，玩家可以自己选择如何行动、说什么话，最后可以达成某个结局。每种结局都有不一样的游戏体验，不管是 he 还是 be，不管是不是想要的结果，不同的剧情总是带来不同的感触。也许会有标准的“好结局”或“坏结局”，但是，结局的结局，是 GAME OVER。把这些游戏经验平移到人身上，其实也差不多——不论开局如何，活出来的样子都大同小异；不论结局如何，结局的结局也只有地府报到这一种；而中间的过程也只不过是不同的游戏体验罢了。游戏体验不同，但倒也不必可以为了追求达成某个结局去破坏游戏体验——除非你有很多重开的机会。所以既然结局的结局都一样，那任意一个结局都是能丰富游戏体验的结局。</p><p>想想，摆是一天，卷也是一天；emo 一天，乐也是一天；那不如丢掉包袱乐着过。（友人指出 emo 其实也是一种很有意思的情绪体验，并且我感觉 emo 是会上瘾的）既然怀念几年前无忧无虑的思想状态，不如就试着去还原一下那种傻开心的感觉，那应该也挺好的。</p><p>窗外的蝉仍是不住地叫，似乎想要抓住藏青色丝绒布织成的、镶嵌着满天繁星的、盛夏将要落下的帷幕。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在略带凉意穿堂而过的秋风中传来了嘒嘒的，远远近近、此起彼伏的蝉鸣声。&lt;/p&gt;
&lt;p&gt;蝉鸣音调很高，差不多 5 kHz；也很响，能到 80 dB。但似乎我从来没有过关于蝉鸣的记忆；有的只是在很小的时候读带插图的法布尔《昆虫记》时所留下的印象：蝉要在地下生长四年，然后自由自在地</summary>
      
    
    
    
    
    <category term="随笔" scheme="https://leostudiooo.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>物理笔记 - 21~22 学年度上 - 第二周</title>
    <link href="https://leostudiooo.github.io/2021/09/12/phys-note-2122-t1w2/"/>
    <id>https://leostudiooo.github.io/2021/09/12/phys-note-2122-t1w2/</id>
    <published>2021-09-12T03:11:26.000Z</published>
    <updated>2021-09-12T06:44:09.344Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">.cmt{  font-size: small;  color: #888888;}</style><h1 id="电荷与电荷守恒定律"><a href="#电荷与电荷守恒定律" class="headerlink" title="电荷与电荷守恒定律"></a>电荷与电荷守恒定律</h1><h2 id="电荷"><a href="#电荷" class="headerlink" title="电荷"></a>电荷</h2><p>自然界只存在两种电荷：<strong>正电荷</strong>和<strong>负电荷</strong>。同种电荷相互排斥，异种电荷相互吸引。</p><p>电荷的多少叫做<strong>电荷量</strong>，单位为<strong>库仑</strong> (Coloumb)，用字母 C 表示。通常，正电荷的电荷量用正数表示，负电荷的颠覆两用负数表示。</p><h2 id="摩擦起电的原理"><a href="#摩擦起电的原理" class="headerlink" title="摩擦起电的原理"></a>摩擦起电的原理</h2><p>两种物质对电子吸引能力不同，假设对电子吸引能力较强的物质为 A，对电子吸引能力较弱的为 B。当 A 与 B 相互摩擦时，B 上的电子会被 A 夺走，而<strong>电子</strong>带负电，原子核中的<strong>质子</strong>带正电；那么 A 就会相应地带上负电，而 B 则带上正电。也因此，两者的带电量<strong>必然等值异号</strong>。</p><h2 id="电荷守恒定律"><a href="#电荷守恒定律" class="headerlink" title="电荷守恒定律"></a>电荷守恒定律</h2><p><strong>电荷既不能被创造，也不能被湮灭。它们只能从一个物体转移到另一个物体，或者从物体的一个部分转移到另一部分。</strong></p><h2 id="感应起电"><a href="#感应起电" class="headerlink" title="感应起电"></a>感应起电</h2><p>由于同种电荷相排斥，异种电荷相吸引，导体中的自由电荷可以移动，那么在带电导体靠近该导体导体时也会发生这种现象，于是导体的远端出现同种电荷，近端出现异种电荷。此时将导体分成两半，则两半会带上等量相反电荷。</p><h1 id="库仑定律"><a href="#库仑定律" class="headerlink" title="库仑定律"></a>库仑定律</h1><h2 id="点电荷"><a href="#点电荷" class="headerlink" title="点电荷"></a>点电荷</h2><p>当一个带电体的线度远小于它与其他带电体的距离时，它的形状和电荷分布状况均无关紧要，这时我们可以将其看作一个带电的点，而这个带电的点就叫做<strong>点电荷</strong>。</p><h2 id="库仑定律-1"><a href="#库仑定律-1" class="headerlink" title="库仑定律"></a>库仑定律</h2><p>$$F = k \frac{Q_{1}Q_{2}}{r^{2}}.$$</p><p>其中，$F$ 是静电力的大小，$Q_{1}$ 和 $Q_{2}$ 是两个点电荷的电荷量，$r$ 是它们的距离。式中的 $k$ 是一个比例常量，叫做<strong>静电力常量</strong>。在国际单位制下，由实验得出：</p><p>$$k = 9.0  \times 10^{9} \rm N \cdot m / C^{2}.$$</p><p>这一定律可以用文字表述为：<br><strong>真空</strong>中两个<strong>静止点电荷</strong>间的作用力与其带电量的乘积成正比，与其距离的平方成反比，且作用力的方向沿两点连线。</p><h1 id="电场、电场强度和电场线"><a href="#电场、电场强度和电场线" class="headerlink" title="电场、电场强度和电场线"></a>电场、电场强度和电场线</h1><h2 id="电场"><a href="#电场" class="headerlink" title="电场"></a>电场</h2><p>电场是由带电体产生的一种看不见、摸不着，且存在于其周围的一种“物质”。</p><p>它的特点是：</p><ul><li>看不见、摸不着，但客观存在</li><li>对放入其中的带电体有力的作用</li></ul><h2 id="电场强度"><a href="#电场强度" class="headerlink" title="电场强度"></a>电场强度</h2><pre class="mermaid">graph LRA[电荷 A]-->|产生| C(场)C-->|影响| B[电荷 B]B-->|产生|CC-->|影响|A</pre><div class="cmt">fig 1.3.1 电荷与电场的关系</div><p><strong>检验电荷</strong>：用来检验某个位置有无电场和电场大小的电荷。<br>检验电荷的<strong>电荷量</strong>与<strong>体积</strong>应充分小，这样它对<strong>场源电荷所形成电场的影响才可以忽略不计</strong>（即被检验电场）。</p><p>可以看出，检验电荷所受到的电场力，不仅与位置有关，还与其所带电荷量有关。因此，我们不能直接用检验电荷所受电场力表示各处电场的性质。实验表明，检验电荷在电场中受力大小与其所带的电荷量之比 $\frac{F}{q}$ 是一个与 $q$ 无关的量。这个比值反映电场中不同位置场的强弱和方向，表征了电场的力的性质。</p><p>因此，我们引入了<strong>电场强度</strong>的概念：<br><strong>电场强度</strong>是用来电场力的性质的物理量。用 $E$ 表示电场强度，则有</p><p>$$\vec{E} = \frac{\vec{F}}{q}.$$</p><p>显然，电场强度（或<strong>场强</strong>）是一个矢量。虽然该物理量由检验电荷在电场中一点受力与其带电量的比值得出，但它是一个与检验电荷无关的物理量。</p><p>我们定义：某一点电场强度的方向是<strong>正电荷</strong>在此处受力的方向。</p><h3 id="推广"><a href="#推广" class="headerlink" title="推广"></a>推广</h3><p>不妨设场源电荷的带电量为 $Q$。<br>由 $E = \frac{F}{q}$ 和库仑定律可知</p><p>$$|E| = \frac{k\frac{Qq}{r^{2}}}{q} = k \frac{Q}{r^{2}}.$$</p><p>其中，$k$ 为静电力常数，$r$ 为该点到场源电荷的距离。</p><p>另外，多个电场在某一点是可以进行叠加的，而和场强就是各场强的<strong>矢量和</strong>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;style type=&quot;text/css&quot;&gt;
.cmt{
  font-size: small;
  color: #888888;
}
&lt;/style&gt;

&lt;h1 id=&quot;电荷与电荷守恒定律&quot;&gt;&lt;a href=&quot;#电荷与电荷守恒定律&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    
    <category term="笔记" scheme="https://leostudiooo.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="高中物理" scheme="https://leostudiooo.github.io/tags/%E9%AB%98%E4%B8%AD%E7%89%A9%E7%90%86/"/>
    
    <category term="物理选修 3-1" scheme="https://leostudiooo.github.io/tags/%E7%89%A9%E7%90%86%E9%80%89%E4%BF%AE-3-1/"/>
    
    <category term="电学" scheme="https://leostudiooo.github.io/tags/%E7%94%B5%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>在 RoboMaster EP 上用 3 种方法画椭圆！</title>
    <link href="https://leostudiooo.github.io/2021/07/28/draw-ellipse-with-a-mecanum-wheeled-car-in-3-ways/"/>
    <id>https://leostudiooo.github.io/2021/07/28/draw-ellipse-with-a-mecanum-wheeled-car-in-3-ways/</id>
    <published>2021-07-28T14:34:44.000Z</published>
    <updated>2021-08-16T08:19:26.486Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>话说我们的国产之光 <a href="https://dji.com">大疆创新（DJI）</a> 公司不仅很会造无人机，而且还很注重人才的培养。于是，他们就弄出了 <a href="https://robomaster.com">RoboMaster 机甲大师</a> 系列活动。最开始，它是面向各大高校的机器人比赛。在大疆进军教育市场后，他们的团队又造出了 RoboMaster S1/EP 系列的教育机器人。由于大疆在内部已经做了图形化编程的适配，这类机器人就相对更适合青少年 <del><em>反正我是玩不惯图形化编程</em></del>，<del>也许</del> 有利于扩大市场。</p><p>在这样的背景下，大疆联合几所高校（今年为 <strong>西安交通大学、电子科技大学、华中科技大学</strong>），与其共同开展“疆来计划”，旨在提升青少年，尤其是高中生的科学素养和编程技能。因此我 <del>抱着试试看的态度</del> 本着“能学到东西就是好地方”的宗旨报名参加了今年电子科技大学的“疆来计划”。</p><p>当然，要参加是有门槛的，得先做题，还要通过视频面试这样的选拔，才能进入到最终的线上和线下夏令营活动。既然要做题，就肯定少不了一些奇奇怪怪的、平常根本不会想到的思路清奇的题。于是就有了我们这一篇博客。</p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote><p>在“大疆教育平台”下载模拟器，通过“大师之路”的学习，控制EP机器人，在模拟器中完成椭圆形图案的绘制，尽可能用更多的方案绘制出椭圆形轨迹（包括但不限于车头方向不变，车头方向时时改变、车头始终指向焦点等）（提交轨迹绘制截图及程序截图）</p></blockquote><p>那他既然要求用多种方法画椭圆，我就用勉为其难地用给出的三种都做一遍吧。</p><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p><img src="/img/image-20210729182759320.png" alt="image-20210729182759320"></p><h2 id="车头方向不变"><a href="#车头方向不变" class="headerlink" title="车头方向不变"></a>车头方向不变</h2><p>这种解法参考了 <a href="https://tieba.baidu.com/p/5820045234">Scratch 画椭圆的方法（百度贴吧）</a> 的 9 楼。</p><h3 id="效果图示"><a href="#效果图示" class="headerlink" title="效果图示"></a>效果图示</h3><p><img src="/img/image-20210730171001690.png" alt="image-20210730171001690"></p><h3 id="数学原理"><a href="#数学原理" class="headerlink" title="数学原理"></a>数学原理</h3><p>椭圆的参数方程：</p><div>$$\begin{equation}    \left\{        \begin{aligned}            x=a\cos\theta\\            y=b\sin\theta\\        \end{aligned}    \right.\end{equation}$$</div><h3 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h3><h4 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h4><p><img src="/img/image-20210729182837982.png" alt="image-20210729182837982"></p><h4 id="代码解释-C"><a href="#代码解释-C" class="headerlink" title="代码解释 (C++)"></a>代码解释 (C++)</h4><pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">ellipse1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">calc1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">move1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    velocity <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span>    <span class="token function">setVelocity</span><span class="token punctuation">(</span>velocity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">240</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        theta <span class="token operator">+=</span> <span class="token number">1.5</span><span class="token punctuation">;</span>        <span class="token function">calc1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">move1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 用椭圆的参数方程计算导航点坐标</span><span class="token keyword">void</span> <span class="token function">calc1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    tgtX <span class="token operator">=</span> a <span class="token operator">*</span> <span class="token function">cos</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token punctuation">;</span>    tgtY <span class="token operator">=</span> b <span class="token operator">*</span> <span class="token function">sin</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token punctuation">;</span>    pathX <span class="token operator">=</span> tgtX <span class="token operator">-</span> <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pathY <span class="token operator">=</span> tgtY <span class="token operator">-</span> <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 移动到导航点</span><span class="token keyword">void</span> <span class="token function">move1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pathX <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token function">move</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> pathX<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">move</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span>pathX<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pathY <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> pathY<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">move</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span>pathY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h2 id="车头沿切线"><a href="#车头沿切线" class="headerlink" title="车头沿切线"></a>车头沿切线</h2><h3 id="数学原理-1"><a href="#数学原理-1" class="headerlink" title="数学原理"></a>数学原理</h3><p>椭圆上任意一点 $A$ 到两个焦点 $F_{1}, F_{2}$ 的距离之和 $d$ 始终为一个定值，也就是长轴 $2a$​​。</p><p>那么我们就根据巡线的思路，如果 $d&gt;2a$ 就往里拐，反之就往外拐。</p><p>但是，这样会造成小车的路径在椭圆的基准线两侧波动，最后会偏到完全修不回来。</p><p>因此，我们引入误差控制，如果 $d&gt;2a$ 那么就往里拐并向里移动 $d-2a$ 米以修正掉由于转向引起的误差。反之，就向外拐并向外移动 $2a-d$ 米。</p><h3 id="效果图示-1"><a href="#效果图示-1" class="headerlink" title="效果图示"></a>效果图示</h3><p><img src="/img/image-20210730171028943.png" alt="image-20210730171028943"></p><h3 id="程序实现-1"><a href="#程序实现-1" class="headerlink" title="程序实现"></a>程序实现</h3><h4 id="代码展示-1"><a href="#代码展示-1" class="headerlink" title="代码展示"></a>代码展示</h4><p><img src="/img/image-20210730171036320.png" alt="image-20210730171036320"></p><p>被折叠的代码块是：</p><blockquote><p>将 distance 设置为  $\sqrt{\left( posX - F_{1}X \right)^2 + posY^2} + \sqrt{\left( posX - F_{2}X \right)^2 + posY^2}$​。</p></blockquote><h4 id="代码解释-C-1"><a href="#代码解释-C-1" class="headerlink" title="代码解释 (C++)"></a>代码解释 (C++)</h4><pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">move2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mvDist<span class="token punctuation">)</span><span class="token punctuation">;</span>    distance <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>F1X<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pow</span><span class="token punctuation">(</span>posY<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>F2X<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pow</span><span class="token punctuation">(</span>posY<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>distance <span class="token operator">></span> <span class="token number">2</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">turn</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> turnAngle<span class="token punctuation">)</span><span class="token punctuation">;</span>        theta <span class="token operator">+=</span> turnAngle<span class="token punctuation">;</span>        <span class="token function">move</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>distance <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>distance <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">turn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> turnAngle<span class="token punctuation">)</span><span class="token punctuation">;</span>        theta <span class="token operator">+=</span> turnAngle<span class="token punctuation">;</span>        <span class="token function">move</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>a <span class="token operator">-</span> distance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">ellipse2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">turn</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span>    velocity <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">;</span>    <span class="token function">setVelocity</span><span class="token punctuation">(</span>velocity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token function">move2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h2 id="车头朝向焦点"><a href="#车头朝向焦点" class="headerlink" title="车头朝向焦点"></a>车头朝向焦点</h2><h3 id="数学原理-2"><a href="#数学原理-2" class="headerlink" title="数学原理"></a>数学原理</h3><p>同上。</p><p>但是这里会涉及到车头方向和移动方向的转换。</p><h3 id="效果图示-2"><a href="#效果图示-2" class="headerlink" title="效果图示"></a>效果图示</h3><p><img src="/img/image-20210730174254683.png" alt="image-20210730174254683"></p><h3 id="程序实现-2"><a href="#程序实现-2" class="headerlink" title="程序实现"></a>程序实现</h3><h4 id="代码展示-2"><a href="#代码展示-2" class="headerlink" title="代码展示"></a>代码展示</h4><p><img src="/img/image-20210730174333605.png" alt="image-20210730174333605"></p><h4 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h4><pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">calc3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">float</span> pathX <span class="token operator">=</span> F1X <span class="token operator">-</span> <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">float</span> pathY <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">-</span> <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">float</span> pathLen <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span>pathX<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pow</span><span class="token punctuation">(</span>pathY<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pathY <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span>        dirTgt <span class="token operator">=</span> <span class="token function">acos</span><span class="token punctuation">(</span>pathX <span class="token operator">/</span> pathLen<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        dirTgt <span class="token operator">=</span> <span class="token number">360</span> <span class="token operator">-</span> <span class="token function">acos</span><span class="token punctuation">(</span>pathX <span class="token operator">/</span> pathLen<span class="token punctuation">)</span><span class="token punctuation">;</span>    dirCurrent <span class="token operator">=</span> <span class="token number">90</span> <span class="token operator">-</span> <span class="token function">getDirection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dirTurn <span class="token operator">=</span> dirTgt <span class="token operator">-</span> dirCurrent<span class="token punctuation">;</span>    dirCurrent <span class="token operator">=</span> dirTgt<span class="token punctuation">;</span>    dirMv <span class="token operator">=</span> dirCurrent <span class="token operator">-</span> theta<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>dirMv <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">180</span><span class="token punctuation">)</span> dirMv <span class="token operator">+=</span> <span class="token number">360</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>dirMv <span class="token operator">></span> <span class="token number">180</span><span class="token punctuation">)</span> dirMv <span class="token operator">-=</span> <span class="token number">360</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>dirTurn <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">180</span><span class="token punctuation">)</span> dirTurn <span class="token operator">+=</span> <span class="token number">360</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>dirTurn <span class="token operator">></span> <span class="token number">180</span><span class="token punctuation">)</span> dirTurn <span class="token operator">-=</span> <span class="token number">360</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">move3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">calc3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>dirTurn <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token function">turn</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> dirTurn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">turn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span>dirTurn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">move</span><span class="token punctuation">(</span>dirMv<span class="token punctuation">,</span> mvDist<span class="token punctuation">)</span><span class="token punctuation">;</span>    distance <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>F1X<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pow</span><span class="token punctuation">(</span>posY<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>F2X<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pow</span><span class="token punctuation">(</span>posY<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>distance <span class="token operator">></span> <span class="token number">2</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        theta <span class="token operator">+=</span> turnAngle<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>dirMv <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">)</span>            <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dirMv <span class="token operator">+</span> <span class="token number">270</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>distance <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dirMv <span class="token operator">-</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>distance <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        theta <span class="token operator">-=</span> turnAngle<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>dirMv <span class="token operator">></span> <span class="token number">90</span><span class="token punctuation">)</span>            <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dirMv <span class="token operator">-</span> <span class="token number">270</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>a <span class="token operator">-</span> distance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dirMv <span class="token operator">+</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>a <span class="token operator">-</span> distance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">ellipse3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">move</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>    velocity <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span>    <span class="token function">setVelocity</span><span class="token punctuation">(</span>velocity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token function">move3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h1 id="彩蛋：面试社死现场"><a href="#彩蛋：面试社死现场" class="headerlink" title="彩蛋：面试社死现场"></a>彩蛋：面试社死现场</h1><blockquote><p><del>老师好！</del></p><p><del>我叫李柃锋，来自成都七中万达学校，是一名新高二的学生，参加过成都市青少年创新科技大赛、能力风暴 WER 机器人比赛和 2021 年的 FRC 比赛。</del>我常用的编程语言有 C/C++、Python 以及 JavaScript。在我校电子机械社中，我与其他视觉组的成员在一个月的时间内共同完成了对 FRC 机器人视觉模块的硬件设计与软件开发，实现了视觉目标识别与距离测定、视觉叠加层辅助瞄准、投球参数计算及自动瞄准的功能。还与 B 站 UP 主共同制作了微软 Surface Dial 的开源版本，相关视频收获近10万播放量。目前，我有较为基础的建模和PCB设计能力。<del>我很喜欢观看 RoboMaster 的比赛视频，可惜一直没有亲身体验的机会。我希望有一天我也可以登上 RoboMaster 超级对抗赛的擂台，为自己的队伍赢得荣誉。现在，我想通过“疆来计划”这个机会提升自己的思维能力和动手能力，为以后的深入学习打下更坚实牢固的基础。</del></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;话说我们的国产之光 &lt;a href=&quot;https://dji.com&quot;&gt;大疆创新（DJI）&lt;/a&gt; 公司不仅很会造无人机，而且还很注重人才的</summary>
      
    
    
    
    
    <category term="RoboMaster" scheme="https://leostudiooo.github.io/tags/RoboMaster/"/>
    
    <category term="DJI" scheme="https://leostudiooo.github.io/tags/DJI/"/>
    
    <category term="教程" scheme="https://leostudiooo.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="算法" scheme="https://leostudiooo.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>在你的博客里添加一个音乐播放器！</title>
    <link href="https://leostudiooo.github.io/2021/05/04/penguinplayer/"/>
    <id>https://leostudiooo.github.io/2021/05/04/penguinplayer/</id>
    <published>2021-05-04T12:40:00.000Z</published>
    <updated>2021-08-16T08:19:26.490Z</updated>
    
    <content type="html"><![CDATA[<p>嗨多磨！这里是 Leo。今天我将介绍如何在你的博客中全局加入一个基于网易云音乐的音乐播放器：<a href="https://github.com/M4TEC/PenguinPlayer">PenguinPlayer</a>。</p><h1 id="关于-PenguinPlayer"><a href="#关于-PenguinPlayer" class="headerlink" title="关于 PenguinPlayer"></a>关于 PenguinPlayer</h1><p>PenguinPlayer 是一个基于网易云音乐的轻量级迷你播放器。它使用 <code>TypeScript</code> 和 <code>Sass</code> 编写，可以通过引用 <code>player.js</code> 在你的任何网页上挂载。</p><ul><li>移动/触控设备支持</li><li>Internet Explorer 10+ 支持</li><li>简洁，好看还好用</li><li>使用简单</li></ul><p>使用它，你首先需要有一个网易云歌单。</p><p>推荐使用 <code>pjax.js</code> 以获得无缝的体验。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="下载-PenguinPlayer"><a href="#下载-PenguinPlayer" class="headerlink" title="下载 PenguinPlayer"></a>下载 PenguinPlayer</h2><p>首先，你需要到<a href="https://github.com/M4TEC/PenguinPlayer/releases">这里</a>下载最新版的 PenguinPlayer。</p><p>如果没有特别的需求，下载 <code>player.js</code> 就够了。</p><p><img src="/img/image-20210504205539939.png" alt="image-20210504205539939"></p><h2 id="配置-PenguinPlayer"><a href="#配置-PenguinPlayer" class="headerlink" title="配置 PenguinPlayer"></a>配置 PenguinPlayer</h2><h3 id="找到你的歌单-ID"><a href="#找到你的歌单-ID" class="headerlink" title="找到你的歌单 ID"></a>找到你的歌单 ID</h3><p>先在网易云音乐上创建一个歌单。在浏览器中打开这个歌单，你就可以得到这个歌单的 URL。</p><p>举个例子：<code>https://music.163.com/#/playlist?id=6630417901</code>，其中，<code>playlist?id=</code> 后面的数字（如 <code>6630417901</code>）就是你的歌单ID。</p><h3 id="配置-PenguinPlayer-1"><a href="#配置-PenguinPlayer-1" class="headerlink" title="配置 PenguinPlayer"></a>配置 PenguinPlayer</h3><p>你有两种方案可供选择：</p><ul><li>直接修改 <code>player.js</code></li><li>通过调用 PenguinPlayer 进行初始化（进阶）</li></ul><h4 id="直接在-player-js-中配置"><a href="#直接在-player-js-中配置" class="headerlink" title="直接在 player.js 中配置"></a>直接在 player.js 中配置</h4><p>现在，打开下载下来的 JavaScript 文档，并在 <code>window</code> 上下文中设置你的歌单 ID。举个例子：<code>window.penguinplayer_id = &quot;6630417901&quot;</code></p><h4 id="调用-windows-PPlayer-initialize-以对播放器进行初始化"><a href="#调用-windows-PPlayer-initialize-以对播放器进行初始化" class="headerlink" title="调用 windows.PPlayer.initialize() 以对播放器进行初始化"></a>调用 <code>windows.PPlayer.initialize()</code> 以对播放器进行初始化</h4><p>你也可以通过使用 <code>windows.PPlayer.initialize()</code>语句在其他地方对 PenguinPlayer 进行初始化操作。详见[进阶操作](# PenguinPlayer 的进阶操作)。</p><h2 id="配置你的博客"><a href="#配置你的博客" class="headerlink" title="配置你的博客"></a>配置你的博客</h2><p>这里以我使用的博客 <code>Hexo</code> 为例，主题是 <code>Yun</code>。</p><p>首先，把修改后的 <code>player.js</code> 复制到 <code>/source/js</code> 文件夹。</p><p>在主题配置文件 <code>yun.yml</code> 中，找到这几行：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># pjax</span><span class="token key atrule">pjax</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">src</span><span class="token punctuation">:</span> /js/pjax.js<span class="token comment"># stylesheets loaded in the &lt;head></span><span class="token key atrule">css</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> /css/hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>yun.css<span class="token comment"># scripts loaded in the end of the body</span><span class="token key atrule">js</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> /js/utils.js  <span class="token punctuation">-</span> /js/hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>yun.js</code></pre><p>然后在 <code>js</code> 部分添加：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> /js/player.js</code></pre><p>这一步的目的是让网页在运行时加载 PenguinPlayer 的组件。</p><p>你也可以顺便就把 <code>pjax</code> 打开了。</p><h1 id="PenguinPlayer-的进阶操作"><a href="#PenguinPlayer-的进阶操作" class="headerlink" title="PenguinPlayer 的进阶操作"></a>PenguinPlayer 的进阶操作</h1><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>事实上，PenguinPlayer 为你提供了更多的自定义参数。</p><p>你可以使用 <code>window.PPlayer.initialize(options: PenguinPlayerOptions)</code> 语句在对其初始化时对其进行配置。</p><p>所有可用的配置参数都在下表中展示：</p><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>playlist</code></td><td><code>string</code></td><td>这是你的歌单 ID。</td></tr><tr><td><code>startIndex?</code></td><td><code>number</code></td><td>指定一个在初始化后播放的歌曲序号，省略则随机选择。</td></tr><tr><td><code>overrideVolume?</code></td><td><code>number</code></td><td>在初始化时使用给定的音量值来取代播放器默认值或者缓存的值。</td></tr><tr><td><code>overridePlaymode?</code></td><td><code>Playmodes</code></td><td>在初始化时使用给定的播放模式来取代播放器默认值或者缓存的值。</td></tr></tbody></table><h2 id="不同版本"><a href="#不同版本" class="headerlink" title="不同版本"></a>不同版本</h2><table><thead><tr><th>文件名</th><th>描述</th></tr></thead><tbody><tr><td>player.js</td><td><strong>推荐！</strong>这个版本能在现代浏览器中使用。</td></tr><tr><td>player.no-style.js</td><td>不包含样式的版本。</td></tr><tr><td>player.ie.js</td><td>包含了为 <code>Internet Explorer</code> 准备的兼容代码的版本，如果你想要适配 IE 这种没人用的孤儿请使用这个版本。</td></tr><tr><td>player.no-style.ie.js</td><td><code>player.no-style.js</code>和<code>player.ie.js</code>的缝合怪（其实就是没有样式的 IE 版本）</td></tr></tbody></table><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>播放器的所有接口都暴露在<code>window</code>上下文的<code>PPlayer</code>对象中</p><table><thead><tr><th>属性名</th><th>描述</th></tr></thead><tbody><tr><td><code>initialize(id: string)</code></td><td>初始化播放器</td></tr><tr><td><code>play(index?: number)</code></td><td>播放。如果指定<code>index</code>的值则会播放歌单相应位置的歌曲</td></tr><tr><td><code>pause()</code></td><td>暂停</td></tr><tr><td><code>next()</code></td><td>下一首</td></tr><tr><td><code>previous()</code></td><td>上一首</td></tr><tr><td><code>addEventListener(name: string, handler: Function)</code></td><td>添加一个事件监听器</td></tr><tr><td><code>removeEventListener(name: string, handler: Function)</code></td><td>移除一个事件监听器</td></tr><tr><td><code>volume</code>: <code>number</code></td><td>音量。有效值在<code>0-1</code>之间</td></tr><tr><td><code>currentTime</code>: <code>number</code></td><td>当前时间位置</td></tr><tr><td><code>duration</code>: <code>number</code></td><td><code>getter</code> 歌曲时长</td></tr><tr><td><code>paused</code>: <code>boolean</code></td><td><code>getter</code> 是否暂停</td></tr><tr><td><code>song</code>: <code>Song</code></td><td>当前歌曲</td></tr><tr><td><code>playlist</code>: <code>Song[]</code></td><td>歌单</td></tr></tbody></table><h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>你可以在<a href="http://afdian.net/@TenmaHiltonWhat">这里</a>请作者<a href="https://github.com/luotr">@LuoTR</a>喝水。</p><p>你也可以在左栏关注我的 B 站频道。</p><p>你还可以在下面请我喝水。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;嗨多磨！这里是 Leo。今天我将介绍如何在你的博客中全局加入一个基于网易云音乐的音乐播放器：&lt;a href=&quot;https://github.com/M4TEC/PenguinPlayer&quot;&gt;PenguinPlayer&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;关于-PenguinP</summary>
      
    
    
    
    
    <category term="教程" scheme="https://leostudiooo.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="PenguinPlayer" scheme="https://leostudiooo.github.io/tags/PenguinPlayer/"/>
    
  </entry>
  
  <entry>
    <title>提问的智慧</title>
    <link href="https://leostudiooo.github.io/2021/02/27/how-to-ask-questions-the-smart-way/"/>
    <id>https://leostudiooo.github.io/2021/02/27/how-to-ask-questions-the-smart-way/</id>
    <published>2021-02-27T06:07:10.000Z</published>
    <updated>2021-08-16T08:19:26.488Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载自<a href="https://github.com/tvvocold/How-To-Ask-Questions-The-Smart-Way">https://github.com/tvvocold/How-To-Ask-Questions-The-Smart-Way</a></p></blockquote><h1 id="提问的智慧"><a href="#提问的智慧" class="headerlink" title="提问的智慧"></a>提问的智慧</h1><h4 id="艾瑞克-史蒂文-雷蒙德（Eric-Steven-Raymond）"><a href="#艾瑞克-史蒂文-雷蒙德（Eric-Steven-Raymond）" class="headerlink" title="艾瑞克.史蒂文.雷蒙德（Eric Steven Raymond）"></a>艾瑞克.史蒂文.雷蒙德（Eric Steven Raymond）</h4><p>Thyrsus Enterprises</p><p><a href="mailto:&#101;&#x73;&#114;&#64;&#116;&#x68;&#121;&#114;&#115;&#x75;&#x73;&#x2e;&#99;&#x6f;&#x6d;">&#101;&#x73;&#114;&#64;&#116;&#x68;&#121;&#114;&#115;&#x75;&#x73;&#x2e;&#99;&#x6f;&#x6d;</a></p><h4 id="瑞克-莫恩（Rick-Moen）"><a href="#瑞克-莫恩（Rick-Moen）" class="headerlink" title="瑞克.莫恩（Rick Moen）"></a>瑞克.莫恩（Rick Moen）</h4><p><a href="mailto:&#x72;&#x65;&#x73;&#x70;&#111;&#x6e;&#x64;&#x2d;&#97;&#117;&#116;&#x6f;&#64;&#108;&#x69;&#x6e;&#x75;&#x78;&#109;&#97;&#102;&#105;&#97;&#46;&#99;&#111;&#109;">&#x72;&#x65;&#x73;&#x70;&#111;&#x6e;&#x64;&#x2d;&#97;&#117;&#116;&#x6f;&#64;&#108;&#x69;&#x6e;&#x75;&#x78;&#109;&#97;&#102;&#105;&#97;&#46;&#99;&#111;&#109;</a><br>版权©2001, 2006 Eric S. Raymond, Rick Moen</p><h3 id="修订历史"><a href="#修订历史" class="headerlink" title="修订历史"></a>修订历史</h3><pre class="language-none"><code class="language-none">修订版 3.92013年4月23日esr修正链接修订版 3.82012年6月19日esr修正链接修订版 3.72010年12月6日esr对于英语为第二语言人士的有益建议修订版 3.72010年11月2日esr几种翻译不见了修订版 3.62008年3月19日esr小更新及新链接修订版 3.52008年1月2日esr勘误及一些翻译链接修订版 3.42007年3月24日esr新章节：“关于代码的问题”修订版 3.32006年9月29日esr增加凯.尼格曼（Kai Niggemann）的一个好建议修订版 3.22006年1月10日esr加入瑞克.莫恩（Rick Moen）编写的内容修订版 3.12004年10月28日esr文档“谷歌是你的朋友！”修订版 3.02004年2月2日esr主要新增在网页论坛应有的礼节</code></pre><h3 id="原文：How-To-Ask-Questions-The-Smart-Way"><a href="#原文：How-To-Ask-Questions-The-Smart-Way" class="headerlink" title="原文：How To Ask Questions The Smart Way"></a><a href="http://www.catb.org/~esr/faqs/smart-questions.html">原文：How To Ask Questions The Smart Way</a></h3><p>翻译：王刚 &lt;yafrank at 126 dot com &gt;<br>时间：2013年10月26日<br>内容</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><ul><li><a href="#提问的智慧">提问的智慧</a><pre><code>      - [艾瑞克.史蒂文.雷蒙德（Eric Steven Raymond）](#艾瑞克史蒂文雷蒙德eric-steven-raymond)      - [瑞克.莫恩（Rick Moen）](#瑞克莫恩rick-moen)  - [修订历史](#修订历史)  - [原文：How To Ask Questions The Smart Way](#原文how-to-ask-questions-the-smart-way)  - [目录](#目录)  - [弃权申明](#弃权申明)  - [引言](#引言)  - [提问前](#提问前)  - [提问时](#提问时)      - [仔细挑选论坛](#仔细挑选论坛)      - [面向新手的论坛和互联网中继聊天（IRC）通常响应最快](#面向新手的论坛和互联网中继聊天irc通常响应最快)      - [第二步，使用项目的邮件列表](#第二步使用项目的邮件列表)      - [使用有意义且明确的主题](#使用有意义且明确的主题)      - [使问题容易回复](#使问题容易回复)      - [用清晰、语法、拼写正确的语句书写](#用清晰语法拼写正确的语句书写)      - [使用易于读取且标准的文件格式发送问题](#使用易于读取且标准的文件格式发送问题)      - [描述问题应准确且有内容](#描述问题应准确且有内容)      - [量不在多，精炼则灵](#量不在多精炼则灵)      - [别急于宣称找到臭虫](#别急于宣称找到臭虫)      - [低声下气代替不了做自己的家庭作业](#低声下气代替不了做自己的家庭作业)      - [描述问题症状而不是猜测](#描述问题症状而不是猜测)      - [按时间先后罗列问题症状](#按时间先后罗列问题症状)      - [描述目标而不是过程](#描述目标而不是过程)      - [别要求私下回复电邮](#别要求私下回复电邮)      - [提问应明确](#提问应明确)      - [关于代码的问题](#关于代码的问题)      - [别张贴家庭作业式问题](#别张贴家庭作业式问题)      - [删除无意义的要求](#删除无意义的要求)      - [不要把问题标记为“紧急”，即使对你而言的确如此](#不要把问题标记为紧急即使对你而言的确如此)      - [礼貌总是有益的](#礼貌总是有益的)      - [问题解决后追加一条简要说明](#问题解决后追加一条简要说明)  - [如何解读回答](#如何解读回答)      - [“读读该死的手册”（RTFM）和“搜搜该死的网络”（STFW）：如何明白你已完全搞砸](#读读该死的手册rtfm和搜搜该死的网络stfw如何明白你已完全搞砸)      - [如果还不明白……](#如果还不明白)      - [对待无礼](#对待无礼)  - [别象失败者那样反应](#别象失败者那样反应)  - [提问禁忌](#提问禁忌)      - [好问题与坏问题](#好问题与坏问题)  - [如果得不到回答](#如果得不到回答)  - [如何更好地回答](#如何更好地回答)  - [相关资源](#相关资源)  - [鸣谢](#鸣谢)</code></pre></li></ul><blockquote><p>译文： 印尼语 白俄罗斯语 巴西葡萄牙语 简体中文 荷兰语 法语 乔治亚语 德语 希腊语 希伯来语 日语 波兰语 葡萄牙语 罗马尼亚语 俄语 西班牙语 泰语 如果你想复制、镜像、翻译或引用本文，请参阅我的 复制协议。</p></blockquote><h3 id="弃权申明"><a href="#弃权申明" class="headerlink" title="弃权申明"></a>弃权申明</h3><p>许多项目的网站在如何取得帮助的部分链接了本文，这没有关系，也正是我们想要的。但如果你是该项目生成此链接的网管，请在链接附近显著位置注明：我们不提供该项目的服务支持！</p><p>我们已经领教了没有此说明带来的痛苦，我们将不停地被一些白痴纠缠，他们认为既然我们发布了本文，那么我们就有责任解决世上所有的技术问题。</p><p>如果你是因为需要帮助正在阅读本文，然后就带着可以直接从作者那取得帮助的印象离开，那么 你 就不幸成了我们所说的白痴之一。 别向 我们 提问，我们不会理睬的。 我们只是在这教你如何从那些真正懂得你软硬件问题的人那里取得帮助，但 99.9％ 的时间我们不会是那些人。除非你非常地 确定 本文的作者是你遇到问题方面的专家，请不要打搅，这样大家都更开心一点。</p><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>在 黑客 的世界里，你所提技术问题的解答很大程度上取决于你提问的方式与解决此问题的难度，本文将教你如何提问才更有可能得到满意的答复。</p><p>开源程序的应用已经很广，你通常可以从其他更有经验的用户而不是黑客那里得到解答。这是好事，他们一般对新手常有的毛病更容忍一点。然尔，使用我们推荐的方法，象对待黑客那样对待这些有经验的用户，通常能最有效地得到问题的解答。</p><p>第一件需要明白的事是黑客喜欢难题和激发思考的好问题。假如不是这样，我们也不会写本文了。如果你能提出一个有趣的问题让我们咀嚼玩味，我们会感激你。好问题是种激励与礼物，帮助我们发展认知，揭示没有注意或想到的问题。在黑客中，“好问题！” 是非常热烈而真挚的赞许。</p><p>此外，黑客还有遇到简单问题就表现出敌视或傲慢的名声。有时，我们看起来还对新手和愚蠢的家伙有条件反射式的无礼，但事情并不真是这样。</p><p>我们只是毫无歉意地敌视那些提问前不愿思考、不做自己家庭作业的人。这种人就象时间无底洞──他们只知道索取，不愿意付出，他们浪费了时间，这些时间本可用于其它更有趣的问题或更值得回答的人。我们将这种人叫做 “失败者（loser）” （由于历史原因，我们有时将“loser”拼写为“lusers” 。）</p><p>我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，计算机只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做，我们承认这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。不过，我们回答问题的风格是为了适应那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就会在自己能做得最好的事情上不再那么犀利。</p><p>我们（大多数）是自愿者， 从自己繁忙的生活中抽时间来回答问题，有时会力不从心。因此，我们会毫不留情地滤除问题，特别是那些看起来象是失败者提的，以便更有效地把回答问题的时间留给那些胜利者。</p><p>如果你认为这种态度令人反感、以施惠者自居或傲慢自大，请检查你的假设，我们并未要求你屈服──事实上，假如你做了该做的努力，我们中的大多数将非常乐意平等地与你交流，并欢迎你接纳我们的文化。试图去帮助那些不愿自救的人对我们简直没有效率。不懂没有关系，但愚蠢地做事不行。</p><p>所以，你不必在技术上很在行才能吸引我们的注意，但你 必须 表现出能引导你在行的姿态──机 敏、有想法、善于观察、乐于主动参与问题的解决。如果你做不到这些使你与众不同的事情，我们建议你付钱跟别人签商业服务合同，而不是要求黑客无偿帮助。</p><p>如果你决定向我们求助，你不会想成为一名失败者，你也不想被看成一个失败者。得到快速有效回答的最好方法是使提问者看起来象个聪明、自信和有想法的人，并且暗示只是碰巧在某一特别问题上需要帮助。</p><p>（欢迎对本文指正，可以将建议发至 <a href="mailto:esr@thyrsus.com">esr@thyrsus.com</a> 或 <a href="mailto:respond-auto@linuxmafia.com">respond-auto@linuxmafia.com</a>。 请注意，本文不想成为一般性的 网络礼仪 指南，我一般会拒绝那些与引出技术论坛中有用的回答不特别相关的建议。）</p><h3 id="提问前"><a href="#提问前" class="headerlink" title="提问前"></a>提问前</h3><p>在通过电邮、新闻组或论坛提技术问题以前，做以下事情：</p><ul><li>尝试在你准备提问论坛的历史文档中搜索答案</li><li>尝试搜索互联网以找到答案</li><li>尝试阅读手册以找到答案</li><li>尝试阅读“常见问题文档”（FAQ）以找到答案</li><li>尝试自己检查或试验以找到答案</li><li>尝试请教懂行的朋友以找到答案</li><li>如果你是程序员，尝试阅读源代码以找到答案</li></ul><p>提问时，请先表明你已做了上述事情，这将有助于建立你不是寄生虫与浪费别人时间的印象。最好再表述你从中 学到的东西 ，我们喜欢回答那些表现出能从答案中学习的人。</p><p>运用某些策略，比如用谷歌（Google）搜索你遇到的各种错误提示（既搜索 谷歌论坛，也搜索网页）， 这样很可能直接就找到了解决问题的文档或邮件列表线索。 即使没有结果，在邮件列表或新闻组寻求帮助时提一句“我在谷歌中搜过下列句子但没有找到什么有用的东西” 也是件好事，至少它表明了搜索引擎不能提供哪些帮助。将搜索关键词与你的问题及可能的解决方案联系起来，还有助于引导其他有类似问题的人。</p><p>别着急，不要指望几秒钟的谷歌搜索就能解决一个复杂的问题。读一下常见问题文档。在向专家提问之前，先向后靠靠放松一下，再思考一下问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑抛出，只因你的第一次搜索没有结果（或者结果太多）。</p><p>认真地思考，准备好你的问题。轻率的提问只能得到轻率的回答，或者压根没有。在提问时，你越是表现出在此前做过思考与努力去解决自己的问题，你越有可能得到真正的帮助。</p><p>注意别提错问题。如果提问基于错误的假设，某黑客多半会一边想 “愚蠢的问题……”，一边按将错就错的答案回复你，并且希望这种只是得到你自己“问的问题”而非真正所需的解答，给你一个教训。</p><p>永远不要假设你 有资格 得到解答。你没有这种资格，毕竟你没有为此服务付费。如果你能够提出有内容、有趣和激励思考的问题──那种毫无疑问能够向社区贡献经验，而不仅仅是消极地要求从别人那获取知识的问题，你将“挣到”答案。</p><p>另一方面，表明你有能力也乐意参与问题的解决是个很好的开端。“有没有人能指个方向？”，我这还差点什么？”，“我应该查哪个网站？”，通常要比 “请给出我可以用的完整步骤”更容易得到回复，因为你表明了只要有人能指个方向，你就很乐意完成剩下的过程。</p><h3 id="提问时"><a href="#提问时" class="headerlink" title="提问时"></a>提问时</h3><h4 id="仔细挑选论坛"><a href="#仔细挑选论坛" class="headerlink" title="仔细挑选论坛"></a>仔细挑选论坛</h4><p>要对在哪提问留心，如果你做了下述事情，多半会被一笔勾销或被看成“失败者”：</p><ul><li>张贴与论坛主题无关的问题</li><li>在面向高级技术问题的论坛上张贴肤浅的问题，或者反之。</li><li>在太多不同的新闻组同时张贴</li><li>给既非熟人也没有义务解决你问题的人发送你私人的电邮</li></ul><p>为保护通信的渠道不被无关的东西淹没，黑客会除掉那些没有找对地方的问题，你不会想让这种事落到自己头上的。</p><p>因此，第一步是找对论坛。谷歌和其它搜索引擎还是你的朋友，可以用它们搜索你遇到困难的软硬件问题最相关的项目网站。那里通常都有项目的常见问题（FAQ）、邮件列表及文档的链接。如果你的努力（包括 阅读 FAQ）都没有结果，这些邮件列表就是最后能取得帮助的地方。项目的网站也许还有报告臭虫的流程或链接，如果是这样，去看看。</p><p>向陌生的人或论坛发送邮件极有可能是在冒险。譬如，不要假设一个内容丰富的网页的作者想充当你的免费顾问，不要对你的问题是否会受到欢迎做太乐观的估计──如果你不确定，向别处发或者压根别发。</p><p>在选择论坛、新闻组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以明确你的问题是否切题。发贴前先翻翻已有的帖子，这样可以让你感受一下那里行事的方式。事实上，张贴前在新闻组或邮件列表的历史文档中搜索与你问题相关的关键词是个极好的主意，也许就找到答案了。即使没有，也能帮助你归纳出更好的问题。</p><p>别象机关枪似的一次性“扫射”所有的帮助渠道，这就象大喊大叫一样会令人不快，温柔地一个一个来。</p><p>弄懂主题！最典型的错误之一是在某种致立于跨平台可移植的语言、库或工具的论坛中提关于 Unix 或 Windows 操作系统程序接口的问题。如果你不明白为什么这是大错，最好在搞清楚概念前什么也别问。</p><p>一般来说，在仔细挑选的公共论坛中提问比在私有论坛中提同样的问题更容易得到有用的回答。有几个道理支持这点，一是看潜在的回复者有多少，二是看论坛的参与者有多少，黑客更愿回答能启发多数人的问题。</p><p>可以理解，老练的黑客和一些流行软件的作者正在承受过多的不当消息。就象那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端──已经好几次了，一些流行软件的作者退出了对自己软件的支持，因为伴随而来的涌入其私人邮箱的垃圾邮件变得无法忍受。</p><h4 id="面向新手的论坛和互联网中继聊天（IRC）通常响应最快"><a href="#面向新手的论坛和互联网中继聊天（IRC）通常响应最快" class="headerlink" title="面向新手的论坛和互联网中继聊天（IRC）通常响应最快"></a>面向新手的论坛和互联网中继聊天（IRC）通常响应最快</h4><p>本地的用户组织或者你所用的 Linux 发行版也许正在宣传新手取得帮助的论坛或 IRC 通道（在一些非英语国家，新手论坛很可能还是邮件列表），这些地方是开始提问的好去处，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。经过宣传的 IRC 通道是公开邀请提问的地方，通常可以得到实时的回复。</p><p>事实上，如果出问题的程序来自某发行版（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的项目论坛或邮件列表，（否则）该项目的黑客可能仅仅回复“用 我们的 代码”。</p><p>在任何论坛发贴以前，先看看有没有搜索功能。如果有，就试着用问题的几个关键词搜索一下，也许就有帮助。如果在此之前你已做过全面的网页搜索（你应该这样去做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。</p><p>通过论坛或 IRC 通道提供项目的用户支持有增长的趋势，电子邮件交流则更多地为项目开发者保留。所以先在论坛或 IRC 中寻求与该项目相关的帮助。</p><h4 id="第二步，使用项目的邮件列表"><a href="#第二步，使用项目的邮件列表" class="headerlink" title="第二步，使用项目的邮件列表"></a>第二步，使用项目的邮件列表</h4><p>当某个项目存在开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文档和主页，找到项目的邮件列表并使用它。采用这种办法有几个很好的理由：</p><ul><li>向个别开发者提的问题（如果）足够好，也将对整个项目组有益。相反，如果你认为自己的问题对整个项目组来说太愚蠢，这也不能成为骚扰个别开发者的理由。</li><li>向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导）也许太忙以至于没法回答你的问题。</li><li>大多数邮件列表都要存档，那些存档将被搜索引擎索引，如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。</li><li>如果某些问题经常被问到，开发者可以利用此信息改进文档或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。</li></ul><p>如果一个项目既有 “用户” 也有“开发者”（或 “黑客”）邮件列表或论坛，而你又不摆弄那些代码，向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会遭受你的噪音干扰。</p><p>然尔，如果你 确信 你的问题不一般，而且在“用户” 列表或论坛中几天都没有回复，可以试试“开发者”列表或论坛。建议你在张贴前最好先暗暗地观察几天,至少看看最近几天保存的帖子,以了解那的行事方式（事实上这是参与任何私有或半私有列表的好主意）</p><p>如果你找不到一个项目的邮件列表，而只能查到项目维护者的地址，只管向其发信。即便在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。</p><h4 id="使用有意义且明确的主题"><a href="#使用有意义且明确的主题" class="headerlink" title="使用有意义且明确的主题"></a>使用有意义且明确的主题</h4><p>在邮件列表、新闻组或论坛中，主题是你在五十个或更少的字以内吸引有资格专家注意的黄金机会，不要用诸如 “请帮我” （更别提大写的 “请帮我！！！！”，这种主题的消息会被条件反射式地删掉）之类的唠叨浪费机会。不要用你痛苦的深度来打动我们，相反，要在这点空间中使用超级简明扼要的问题描述。</p><p>使用主题的好惯例是“对象──偏差”（式的描述），许多技术支持组织就是这样做的。在“对象”部分指明是哪一个或哪一组东西有问题，在“偏差”部分则描述与期望的行为不一致的地方。</p><p>愚蠢：</p><blockquote><p>救命啊！我的笔记本视频工作不正常！</p></blockquote><p>明智：</p><blockquote><p>X.org 6.8.1 扭曲鼠标光标，MV1005 型号的某显卡芯片组</p></blockquote><p>更明智：</p><blockquote><p>使用 MV1005 型号的某显卡芯片组在 X.org 6.8.1 的鼠标光标被扭曲</p></blockquote><p>编写 “对象──偏差”式描述的过程有助于你组织对问题的细致思考。是什么被影响了？仅仅是鼠标光标或者还有其它图形？只在 X.org 中出现？或只是在其 6.8.1 版中？是针对某显卡芯片组？或者只是其中的 MV1005 型号？一个黑客只需描一眼就能够立即明白什么是你遇到的问题，什么是你自己的问题。</p><p>更一般地，想象一下在一个只显示主题的文档索引中查找。让你的主题更好地反映问题，可以使下一个搜索类似问题的人能够在文档中直接就找到答案的线索，而不用再次发贴提问。</p><p>如果你想在回复中提问，确保改变主题以表明你是在问一个问题，一个主题象 <code>Re: 测试</code> 或者 <code>Re: 新臭虫</code> 的消息不太可能引起足够的注意。同时，将回复中与新主题不甚相关的引用内容尽量删除。</p><p>对于列表消息，不要直接点击回复（按钮）来开始一个全新的线索，这将限制你的观众。有些邮件阅读程序，比如 mutt，允许用户按线索排序并通过折叠线索来隐藏消息，这样做的人永远看不到你发的消息。</p><p>仅仅改变主题还不够。mutt 和其它一些邮件阅读程序还要检查邮件头主题以外的其它信息，以便为其指定线索，所以宁可发一个全新的邮件。</p><p>在论坛，因为消息与特定的线索紧密结合，并且通常在线索之外不可见，好的提问方式略有不同，通过回复提问并不要紧。不是所有论坛都允许在回复中出现分离的主题，而且这样做了基本上没有人会去看。不过，通过回复提问本身就是令人怀疑的做法，因为它们只会被正在查看该线索的人读到。所以，除非你 只想 在该线索当前活跃的人群中提问，还是另起炉灶比较好。</p><h4 id="使问题容易回复"><a href="#使问题容易回复" class="headerlink" title="使问题容易回复"></a>使问题容易回复</h4><p>以<code>请向……回复</code>来结束问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟考虑你的问题更麻烦。如果你的邮件客户端程序不支持这样做，换个好点的；如果是操作系统不支持所有这种邮件客户端程序，也换个好点的。</p><p>在论坛，要求通过电子邮件回复是完全无礼的，除非你确信回复的信息也许是敏感的（而且有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复线索时得到电子邮件提醒，可以要求论坛发送。几乎所有论坛都支持诸如<code>留意本线索</code>、<code>有回复发送邮件</code>等功能。</p><h4 id="用清晰、语法、拼写正确的语句书写"><a href="#用清晰、语法、拼写正确的语句书写" class="headerlink" title="用清晰、语法、拼写正确的语句书写"></a>用清晰、语法、拼写正确的语句书写</h4><p>经验告诉我们，粗心与草率的作者通常也粗心与草率地思考和编程（我敢打赌）。为这些粗心与草率的思考者回答问题没有什么好处，我们宁可将时间花在其它地方。</p><p>清楚、良好地表达你的问题非常重要。如果你觉得这样做麻烦，我们也觉得注意（你的问题）麻烦。花点额外的精力斟酌一下字句，用不着太僵硬与正式──事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它 必须 很准确，而且有迹象表明你是在思考和关注问题。</p><p>正确地拼写、使用标点和大小写，不要将 <code>its</code> 混淆为 <code>it&#39;s</code>，<code>loose</code> 搞成 <code>lose</code> 或者将 “discrete” 弄成 “discreet”。不要全部用大写，这会被视为无礼的大声嚷嚷 （全部小写也好不到哪去，因为不易阅读。Alan Cox [注：著名黑客，Linux 内核的重要参与者] 也许可以这样做，但你不行。）</p><p>一般而言，如果你写得象个半文盲似的傻子，多半得不到理睬。也不要使用即时通讯中的简写，如将 <code>you</code> 简化为 <code>u</code> 会使你看起来象一个为了节约二次击键的半文盲式的傻子。更糟的是，如果象个小孩似地鬼画桃符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。</p><p>如果在非母语论坛提问，你的拼写与语法错误会得到有限的宽容，但懒惰完全不会被容忍（是的，我们通常看得出其中的差别）。同时，除非你知道回复者使用的语言，请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在互联网上英语是工作语言，用英语书写可以将你的问题不被阅读就被直接删除的可能性降到最低。</p><p>如果你用英语书写但它是你的第二语言，最好提醒潜在的回复者语言上可能的困难以便绕过这个问题，比如：</p><ul><li>英语不是我的母语，请谅解拼写错误。</li><li>如果您使用某某语言，请电邮/私聊我，也许我需要您的协助翻译我的问题。</li><li>对于这个技术术语本身我很熟悉，但对于它的一些俚语或习惯表达方式就不太明白了。</li><li>我已经同时用某某语及英语提问，如果您使用两者之一回复，我很乐意翻译。</li></ul><h4 id="使用易于读取且标准的文件格式发送问题"><a href="#使用易于读取且标准的文件格式发送问题" class="headerlink" title="使用易于读取且标准的文件格式发送问题"></a>使用易于读取且标准的文件格式发送问题</h4><p>如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：</p><ul><li><p>使用纯文本而不是 HTML（超文本标注语言）（ 关闭HTML 并不难）</p></li><li><p>使用 MIME（多用途互联网邮件扩展）附件通常没有问题，前提是真正有内容（譬如附带的源文件或补丁），而不仅仅是邮件客户端程序生成的模板（譬如只是消息内容的拷贝）。</p></li><li><p>不要发送整段只是单行句子但多次折回的邮件（这使得回复部分内容非常困难）。设想你的读者是在80个字符宽的文本终端阅读邮件，设置你的行折回点小于 80 列。</p></li><li><p>但是，也 不要 用任何固定列折回数据（譬如日志文件拷贝或会话记录）。数据应该原样包含，使回复者确信他们看到的是与你看到的一样的东西。</p></li><li><p>在英语论坛中，不要使用’Quoted-Printable’ MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持。当它们分断时，那些文本中四处散布的 “=20”符号既难看也分散注意力，甚至有可能破坏内容的语意。</p></li><li><p>永远不要 指望黑客们阅读使用封闭的专用格式编写的文档，诸如微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就象有人将还在冒热气的猪粪倒在你门口时你的反应一样。即使他们能够处理，也很厌恶这么做。</p></li><li><p>如果你从使用视窗的电脑发送电子邮件，关闭问题颇多的微软“聪明引用”功能（在“工具” -&gt; “自动纠正选项”的“输入时自动格式化”下去掉聪明引用的选框），以免在你的邮件中到处散布垃圾字符。</p></li><li><p>在论坛，勿滥用“表情符号”和“HTML”功能(当它们提供时)。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来象个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是有用的回复更有兴趣。</p></li><li><p>如果你使用图形用户界面的邮件客户端程序(如网景公司的 Messenger、微软公司的 Outlook 或者其它类似的)，注意它们的缺省配置不一定满足这些要求。大多数这类程序有基于菜单的<code>查看源码</code>命令，用它来检查发送文件夹中的消息，以确保发送的是没有多余杂质的纯文本文件。</p></li></ul><h4 id="描述问题应准确且有内容"><a href="#描述问题应准确且有内容" class="headerlink" title="描述问题应准确且有内容"></a>描述问题应准确且有内容</h4><ul><li>仔细、清楚地描述问题的症状</li><li>描述问题发生的环境(主机、操作系统、应用程序，任何相关的)，提供销售商的发行版和版本号（如：“Fedora Core 7”、“Slackware 9.1”等）</li><li>描述提问前做过的研究及其理解。</li><li>描述提问前为确定问题而采取的诊断步骤。</li><li>描述最近对计算机或软件配置的任何相关改变。</li><li>如果可能，提供在可控环境下重现问题的方法。</li><li>尽最大努力预测黑客会提到的问题，并提前备好答案。</li></ul><p>如果你认为是代码有问题，向黑客提供在可控环境下重现问题的方法尤其重要。当你这么做时，得到有用且及时回复的可能性将大大增加。</p><p><a href="http://www.chiark.greenend.org.uk/%7Esgtatham/">西蒙.泰瑟姆（Simon Tatham）</a>写过一篇《<a href="http://www.chiark.greenend.org.uk/%7Esgtatham/bugs-tw.html">如何有效报告臭虫》</a>的文章，我强烈推荐各位阅读。</p><h4 id="量不在多，精炼则灵"><a href="#量不在多，精炼则灵" class="headerlink" title="量不在多，精炼则灵"></a>量不在多，精炼则灵</h4><p>你应该（写得）精炼且有内容，简单地将一大堆代码或数据罗列在求助消息中达不到目的。如果你有一个很大且复杂的测试样例让程序崩溃，尝试将其裁剪得越小越好。</p><p>至少有三个理由支持这点。第一，让别人看到你在努力简化问题使你更有可能得到回复。第二，简化问题使你更有可能得到 <code>有用的</code> 回复。第三，在提纯臭虫报告的过程中，你可能自己就找到了解决办法或权宜之计。</p><h4 id="别急于宣称找到臭虫"><a href="#别急于宣称找到臭虫" class="headerlink" title="别急于宣称找到臭虫"></a>别急于宣称找到臭虫</h4><p>当你在一个软件中遇到问题，除非你 非常、非常 的有根据，不要动辄声称找到了臭虫。提示：除非你能提供解决问题的源代码补丁，或者对前一版本的回归测试表现出不正确的行为，否则你都多半不够完全确信。对于网页和文档也如此，如果你（声称）发现了文档的“臭虫”，你应该能提供相应位置的替代文本。</p><p>记住，还有许多其它用户并未经历你遇到的问题，否则你在阅读文档或搜索网页时就应该发现了（[你在报怨前已经做了这些，是吧 ？](#你在报怨前已经做了这些，是吧 ？)）。这也意味着很有可能是你弄错了而不是软件本身有问题。</p><p>编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了臭虫，也就置疑了他们的能力，即使你是对的，也有可能会使其中的部分人感到不快。（此外，）在主题中嚷嚷“臭虫”也是特别不老练的。</p><p>提问时，即使你私下非常确信已经发现一个真正的臭虫，最好写得象是 你 做错了什么。如果真的有臭虫，你会在回复中看到这点。这样做的话，如果真有虫子，维护者就会向你道歉，这总比你弄砸了然后欠别人一个道歉要强。</p><h4 id="低声下气代替不了做自己的家庭作业"><a href="#低声下气代替不了做自己的家庭作业" class="headerlink" title="低声下气代替不了做自己的家庭作业"></a>低声下气代替不了做自己的家庭作业</h4><p>有些人明白他们不应该粗鲁或傲慢地行事并要求得到答复，但他们退到相反的低声下气的极端：“我知道我只是个可怜的新丁，一个失败者，但……”。这既使人困扰，也没有用，当伴随着对实际问题含糊的描述时还特别令人反感。</p><p>别用低级灵长类动物的办法浪费你我的时间，相反，尽可能清楚地描述背景情况和你的问题，这比低声下气更好地摆正了你的位置。</p><p>有时，论坛设有单独的初学者提问版面，如果你真的认为遇到了肤浅的问题，到那去就是了，但一样别低声下气。</p><h4 id="描述问题症状而不是猜测"><a href="#描述问题症状而不是猜测" class="headerlink" title="描述问题症状而不是猜测"></a>描述问题症状而不是猜测</h4><p>告诉黑客是什么导致了问题是没用的（如果你的诊断理论是了不起的东西，你还会向别人咨询求助吗？）。所以，确保只是告诉他们问题的原始症状，而不是你的解释和理论，让他们来解释和诊断。如果你认为陈述自己的猜测很重要，应清楚地说明这只是你的猜测并描述为什么它们不起作用。</p><p>愚蠢：</p><blockquote><p>我在编译内核时接连遇到 SIG11 错误，怀疑主板上的某根电路丝断了，找到它们的最好办法是什么？</p></blockquote><p>明智：</p><blockquote><p>我组装的电脑（K6/233 CPU、FIC-PA2007 主板[威盛 Apollo VP2 芯片组]、Corsair PC133 SDRAM 256Mb 内存）最近在开机 20 分钟左右、做内核编译时频繁地报 SIG11 错，但在头 20 分钟内从不出问题。重启动不会复位时钟，但整夜关机会。更换所有内存未解决问题，相关的典型编译会话日志附后。</p></blockquote><p>由于以上这点许多人似乎难以掌握，这里有句话可以提醒你：“所有的诊断专家都来自密苏里州”。美国国务院的官方座右铭则是“让我看看”（出自国会议员威勒德.D.范迪弗［Willard D. Vandiver］在1899年时的讲话：“我来自一个出产玉米、棉花、牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。”）针对诊断者而言，这并不是怀疑，而只是一种真实而有用的需求，以便让他们看到与你看到的原始证据尽可能一致的东西，而不是你的猜测与总结。（所以，）让我们看看。</p><h4 id="按时间先后罗列问题症状"><a href="#按时间先后罗列问题症状" class="headerlink" title="按时间先后罗列问题症状"></a>按时间先后罗列问题症状</h4><p>刚出问题之前发生的事情通常包含有解决问题最有效的线索。所以，记录中应准确地描述你、电脑和软件在崩溃前都做了什么。在命令行处理的情况下，有会话日志（如运行脚本工具生成的）并引用相关的若干（如20）行记录会非常有帮助。</p><p>如果崩溃的程序有诊断选项（如-v详述开关），试着选择这些能在记录中增加排错信息的选项。记住，“多”不等于“好”。试着选取适当的排错级别以便提供有用的信息而不是将阅读者淹没在垃圾中。</p><p>如果你的记录很长（如超过四段），在开头简述问题随后按时间先后罗列详细过程也许更有用。这样，黑客在读你的记录时就知道该注意哪些内容了。</p><h4 id="描述目标而不是过程"><a href="#描述目标而不是过程" class="headerlink" title="描述目标而不是过程"></a>描述目标而不是过程</h4><p>如果你想弄清楚如何做某事（而不是报告一个臭虫），在开头就描述你的目标，然后才陈述遇到问题的特定步骤。</p><p>经常出现这种情况，寻求技术帮助的人在脑袋里有个更高层次的目标，他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身有问题，结果要费很大的劲才能通过。</p><p>愚蠢：</p><blockquote><p>我怎样才能让某图形程序的颜色拾取器取得十六进制的 RGB 值？</p></blockquote><p>明智：</p><blockquote><p>我正试着用自己选定数值的颜色替换一幅图片的色表，我现在知道的唯一方法是编辑每个表槽，但却无法让某图形程序的颜色拾取器取得十六进制的 RGB 值。</p></blockquote><p>第二种提法是明智的，它使得建议采用更合适的工具以完成任务的回复成为可能。</p><h4 id="别要求私下回复电邮"><a href="#别要求私下回复电邮" class="headerlink" title="别要求私下回复电邮"></a>别要求私下回复电邮</h4><p>黑客们认为问题的解决过程应该公开、透明，此过程中如果更有才能的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为回复者也因为能力和学识被其它同行看到而得到某种回报。</p><p>当你要求私下回复时，此过程和回报都被中止。别这样做，让 回复者 来决定是否私下回答──如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人毫无意义。</p><p>对这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么“向我发电邮，我将为论坛归纳这些回复”将是神奇的句子。试着将邮件列表或新闻组从洪水般雷同的回复中解救出来是非常有礼貌的──但你必须信守诺言。</p><h4 id="提问应明确"><a href="#提问应明确" class="headerlink" title="提问应明确"></a>提问应明确</h4><p>漫无边际的问题通常也被视为没有明确限制的时间无底洞。最有可能给你有用答案的人通常也是最忙的人（假如只是因为他们承担了太多工作的话），这些人对于没有止境的时间无底洞极其敏感，所以他们也倾向于讨厌那些漫无边际的问题。</p><p>如果你明确了想让回复者做的事（如指点方向、发送代码、检查补丁或其它），你更有可能得到有用的回复。（因为）这样可以让他们集中精力并间接地设定了他们为帮助你需要花费的时间和精力上限，这很好。</p><p>要想理解专家生活的世界，可以这样设想：那里有丰富的专长资源但稀缺的响应时间。你暗中要求他们奉献的时间越少，你越有可能从这些真正懂行也真正很忙的专家那里得到解答。</p><p>所以限定你的问题以使专家回答时需要付出的时间最少──这通常与简化问题还不太一样。举个例，“请问可否指点一下哪有好一点的 X 解释？”通常要比“请解释一下 X”明智。如果你的代码不运行了，通常请别人看看哪有问题比叫他们帮你改正更明智。</p><h4 id="关于代码的问题"><a href="#关于代码的问题" class="headerlink" title="关于代码的问题"></a>关于代码的问题</h4><p>别要求他人给你出问题的代码排错而不提及应该从何入手。张贴几百行的代码，然后说一声“它不能运行”会让你得不到理睬。只贴几十行代码，然后说一句“在第七行以后，本应该显示<x>，但实际出现的是<y>”非常有可能让你得到回复。</p><p>最精确描述代码问题的方法是提供一个能展示问题的最小测试样例。什么是最小测试样例？它是对问题的展现，只需要刚好能够重现非预期行为的代码即可。如何生成一个最小测试样例？如果你知道哪一行或哪一段代码会产生问题，将其复制并提供刚好够用的外围支撑代码以构成一个完整的样例（够用是指源码刚好能被编译器、解释器或任何处理它的程序所接受）。如果你不能将问题缩小到特定的段落，复制源码并去除那些与问题无关的代码段。你能提供的最小测试样例越小越好（参见 量不在多，精炼则灵 ）。</p><p>生成一个非常小的最小测试样例并不总是可能，但尽力去做是很好的锻练，这有可能帮助你找到需要自己解决的问题。即使你找不到，黑客们喜欢看到你努力过，这将使他们更合作。</p><p>如果你只是想让别人帮忙审一下代码，在最开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。</p><h4 id="别张贴家庭作业式问题"><a href="#别张贴家庭作业式问题" class="headerlink" title="别张贴家庭作业式问题"></a>别张贴家庭作业式问题</h4><p>黑客们善于发现“家庭作业”式的问题。我们中的大多数人已经做了自己的家庭作业，那是该 你 做的，以便从中学到东西。问一下提示没有关系，但不是要求完整的解决方案。</p><p>如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户组、论坛或（作为最后一招）在项目的“用户”邮件列表或论坛中提问。尽管黑客们 会 看出来，一些老用户也许仍会给你提示。</p><h4 id="删除无意义的要求"><a href="#删除无意义的要求" class="headerlink" title="删除无意义的要求"></a>删除无意义的要求</h4><p>抵制这种诱惑，即在求助消息末尾加上诸如“有人能帮我吗？”或“有没有答案？”之类在语义上毫无意义的东西。第一，如果问题描述还不完整，这些附加的东西最多也只能是多余的。第二，因为它们是多余的，黑客们会认为这些东西烦人──就很有可能用逻辑上无误但打发人的回复，诸如“是的，你可以得到帮助”和“不，没有给你的帮助”。</p><p>一般来说，避免提“是或否”类型的问题，除非你想得到 “是或否”类型的回答。</p><h4 id="不要把问题标记为“紧急”，即使对你而言的确如此"><a href="#不要把问题标记为“紧急”，即使对你而言的确如此" class="headerlink" title="不要把问题标记为“紧急”，即使对你而言的确如此"></a>不要把问题标记为“紧急”，即使对你而言的确如此</h4><p>这是你的问题，不要我们的。宣称“紧急”极有可能事与愿违：大多数黑客会直接删除这种消息，他们认为这是无礼和自私地企图得到即时与特殊的关照。而且“紧急”或其它有类似含义的主题有可能触发垃圾过滤规则，潜在的回复者可能永远看不到你的问题！</p><p>有一点点局部的例外，如果你是在一些知名度很高、会使黑客们激动的地方使用程序，也许值得这样去做。在这种情况下，如果你有期限压力，也很有礼貌地提到这点，人们也许会有足够的兴趣快一点回答。</p><p>当然，这是非常冒险的，因为黑客们对什么是令人激动的标准多半与你的不同。譬如从国际空间站这样张贴没有问题，但代表感觉良好的慈善或政治原因这样做几乎肯定不行。事实上，张贴诸如“紧急：帮我救救这个毛绒绒的小海豹！”肯定会被黑客回避或光火，即使他们认为毛绒绒的小海豹很重要。</p><p>如果你觉得这不可思议，再把剩下的内容多读几遍，直到弄懂了再发贴也不迟。</p><h4 id="礼貌总是有益的"><a href="#礼貌总是有益的" class="headerlink" title="礼貌总是有益的"></a>礼貌总是有益的</h4><p>礼貌一点，使用 <code>请</code> 和 <code>谢谢你的关注</code> 或者 <code>谢谢你的关照</code>，让别人明白你感谢他们无偿花时间帮助你。</p><p>坦率地讲，这一点没有语法正确、文字清晰、准确、有内容和避免使用专用格式重要（同时也不能替代它们）。黑客们一般宁可读有点唐突但技术鲜明的臭虫报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教我们什么来评价它的）</p><p>然尔，如果你已经谈清楚了技术问题，客气一点肯定会增加你得到有用回复的机会。</p><p>（我们必须指出，本文唯一受到一些老黑客认真反对的地方是以前曾经推荐过的“提前谢了”，一些黑客认为这隐含着事后不用再感谢任何人的暗示。我们的建议是要么先说 <code>提前谢了</code>，事后 再 对回复者表示感谢，要么换种方式表达，譬如用 <code>谢谢你的关注</code> 或 <code>谢谢你的关照</code>）。</p><h4 id="问题解决后追加一条简要说明"><a href="#问题解决后追加一条简要说明" class="headerlink" title="问题解决后追加一条简要说明"></a>问题解决后追加一条简要说明</h4><p>问题解决后向所有帮助过的人追加一条消息，让他们知道问题是如何解决的并再次感谢。如果问题在邮件列表或新闻组中受到广泛关注，在那里追加此消息比较恰当。</p><p>最理想的方式是向最初提问的线索回复此消息，并在主题中包含 <code>已解决</code>、<code>已搞定</code> 或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见线索 <code>问题 X</code> 和 <code>问题 X-已解决</code> 的潜在回复者就明白不用再浪费时间了（除非他个人觉得“问题 X”有趣），因此可以利用此时间去解决其它问题。</p><p>追加的消息用不着太长或太复杂，一句简单的“你好──是网线坏了！谢谢大家──比尔”就比什么都没有要强。事实上，除非解决问题的技术真正高深，一条简短而亲切的总结比长篇大论要好。说明是什么行动解决了问题，用不着重演整个排错的故事。</p><p>对于有深度的问题，张贴排错历史的摘要是恰当的。描述问题的最终状态，说明是什么解决了问题，在此之后 才指明可以避免的弯路。应避免的弯路部分应放在正确的解决方案和其它总结材料之后，而不要将此消息搞成侦探推理小说。列出那些帮助过你的名字，那样你会交到朋友的。</p><p>除了有礼貌、有内容以外，这种类型的追帖将帮助其他人在邮件列表、新闻组或论坛文档中搜索到真正解决你问题的方案，从而也让他们受益。</p><p>最后，此类追帖还让每位参与协助的人因问题的解决而产生一种满足感。如果你自己不是技术专家或黑客，相信我们，这种感觉对于你寻求帮助的老手和专家是非常重要的。问题叙述到最后不知所终总是令人沮丧的，黑客们痒痒地渴望它们被解决。<code>挠痒痒</code> 为你挣到的信誉将对你下次再次张贴提问非常非常的有帮助。</p><p>考虑一下怎样才能避免他人将来也遇到类似的问题，问问自己编一份文档或 FAQ 补丁会不会有帮助，如果是的话就将补丁发给维护者。</p><p>在黑客中，这种良好的后继行动实际上比传统的礼貌更重要，也是你善待他人而赢得声誉的方式，这是非常有价值的财富。</p><h3 id="如何解读回答"><a href="#如何解读回答" class="headerlink" title="如何解读回答"></a>如何解读回答</h3><h4 id="“读读该死的手册”（RTFM）和“搜搜该死的网络”（STFW）：如何明白你已完全搞砸"><a href="#“读读该死的手册”（RTFM）和“搜搜该死的网络”（STFW）：如何明白你已完全搞砸" class="headerlink" title="“读读该死的手册”（RTFM）和“搜搜该死的网络”（STFW）：如何明白你已完全搞砸"></a>“读读该死的手册”（RTFM）和“搜搜该死的网络”（STFW）：如何明白你已完全搞砸</h4><p>有一个古老而神圣的传统：如果你收到 <code>读读该死的手册</code>（RTFM） 的回复，发信人认为你应该去“读读该死的手册”。他或她多半是对的，去读一下吧。</p><p>“读读该死的手册”（RTFM）有个年轻一点的亲戚，如果你收到“搜搜该死的网络”（STFW）的回复，发信人认为你应该“搜搜该死的网络”。那人多半也是对的，去搜一下吧。(更温和一点的说法是“<a href="http://lmgtfy.com/">谷歌是你的朋友！</a>”)</p><p>在论坛，你也可能被要求去搜索论坛的文档。事实上，有人甚至可能热心地为你提供以前解决此问题的线索。但不要依赖这种关照，提问前应该先搜索一下文档。</p><p>通常，叫你搜索的人已经打开了能解决你问题的手册或网页，正在一边看一边敲键盘。这些回复意味着他认为：</p><ul><li>第一，你要的信息很容易找到。</li><li>第二，自已找要比别人喂到嘴里能学得更多。</li></ul><p>你不应该觉得这样就被冒犯了，按黑客的标准，回复者没有不理你就是在向你表示某种尊敬，你反而应该感谢他热切地想帮助你。</p><h4 id="如果还不明白……"><a href="#如果还不明白……" class="headerlink" title="如果还不明白……"></a>如果还不明白……</h4><p>如果你看不懂回答，不要马上回复一个要求说明的消息，先试试那些最初提问时用过的相同工具（如手册、FAQ、网页、懂行的朋友等）试着搞懂回答。如果还是需要说明，展现你已经明白的。</p><p>譬如，假如我告诉你：“看起来象是某输入项有问题，你需要清除它”，接着是个 不好 的回帖：“什么是某输入项？”。而这是一个 很好 的跟帖：“是的，我读了手册，某某输入项只在 -z 和 -p 开关中被提到，但都没有涉及到如何清除它们，你指的是哪一个还是我弄错了什么？”</p><h4 id="对待无礼"><a href="#对待无礼" class="headerlink" title="对待无礼"></a>对待无礼</h4><p>很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当、一针见血式的交流风格，这种风格对于更关注解决问题而不是使别人感觉舒服而混乱的人是很自然的。</p><p>如果你觉得被冒犯了，试着平静地反应。如果有人真的做了过格的事，邮件列表、新闻组或论坛中的前辈多半会招呼他。如果这 没有 发生而你却光火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而 你 将被视为有错的一方，这将伤害到你获取信息或帮助的机会。</p><p>另一方面，你会偶而真的碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击、用犀利的语言将其驳得体无完肤都是可以接受的。然尔，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外来者，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。</p><p>（有些人断言很多黑客都有轻度的自闭症或阿斯伯格综合症，缺少用于润滑人类社会“正常”交往所需的脑电路。这既可能是真也可能是假。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们 喜欢 现在这个样子，并且一般都对病号标记有站得住脚的怀疑。）</p><p>在下一节，我们会谈到另一个问题，当 你 行为不当时会受到的“冒犯”。</p><h3 id="别象失败者那样反应"><a href="#别象失败者那样反应" class="headerlink" title="别象失败者那样反应"></a>别象失败者那样反应</h3><p>在黑客社区的论坛中有那么几次你可能会搞砸──以本文描述或类似的方式。你会被示众是如何搞砸的，也许言语中还会带点颜色。</p><p>这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反，你该这样去做：</p><p>熬过去，这很正常。事实上，它是有益健康与恰当的。</p><p>社区的标准不会自己维持，它们是通过参与者积极而 公开 地执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，这不是事情运作的方式。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。</p><p>也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称“如果你不想帮助用户就闭嘴”。有思路的参与者纷纷离开的结果只会使它们变成了毫无意义的唠叨与无用的技术论坛。</p><p>是夸张的“友谊”（以上述方式）还是有用？挑一个。</p><p>记着：当黑客说你搞砸了，并且(无论多么刺耳地)告诉你别再这样做时，他正在为关心你和他的社区而行动。对他而言，不理你并将你从他的生活中滤除要容易得多。如果你无法做到感谢，至少要有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人象对待脆弱的洋娃娃那样对你。</p><p>有时候，即使你没有搞砸（或者只是别人想象你搞砸了）， 有些人也会无缘无故地攻击你本人。在这种情况下，报怨倒是 真的 会把问题搞砸。</p><p>这些找茬者要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些找茬者在给自己找麻烦，这点你不用操心。</p><p>也别让自己卷入口水战，大多数口水战最好不要理睬──当然，是在你核实它们只是口水战、没有指出你搞砸的地方，而且没有巧妙地将问题真正的答案藏于其中之后（这也是可能的）。</p><h3 id="提问禁忌"><a href="#提问禁忌" class="headerlink" title="提问禁忌"></a>提问禁忌</h3><p>下面是些典型的愚蠢问题和黑客不回答它们时的想法。</p><p>问：我到哪可以找到某程序或 X 资源？</p><p>问：我怎样用 X 做 Y？</p><p>问：如何配置我的 shell 提示？</p><p>问：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文档转为 TeX 格式吗？</p><p>问：我的{程序、配置、SQL 语句}不运行了</p><p>问：我的视窗电脑出问题了，你能帮忙吗？</p><p>问：我的程序不运行了，我认为系统工具X有问题</p><p>问：我安装 Linux 或 X 遇到困难，你能帮忙吗？</p><p>问：我如何才能破解超级用户口令/盗取通道操作员的特权/查看某人的电子邮件？</p><hr><p>问：    </p><blockquote><p>我到哪可以找到某程序或 X 资源？</p></blockquote><p>答：    </p><blockquote><p>在我找到它的同样地方，笨旦──在网页搜索引擎上。上帝啊，难道还有人不知道如何使用 谷歌 吗？</p></blockquote><p>问：    </p><blockquote><p>我怎样用 X 做 Y？</p></blockquote><p>答：    </p><blockquote><p>如果你想解决的是 Y，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对要解决的 Y 问题糊涂，还被特定形势禁锢了思维。等他们把问题弄好再说。</p></blockquote><p>问：    </p><blockquote><p>如何配置我的 shell 提示？</p></blockquote><p>答：    </p><blockquote><p>如果你有足够的智慧提这个问题，你也该有足够的智慧去 “读读该死的手册”（RTFM），然后自己去找出来。</p></blockquote><p>问：    </p><blockquote><p>我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文档转为 TeX 格式吗？</p></blockquote><p>答：    </p><blockquote><p>试试就知道了。如果你试过，你既知道了答案，又不用浪费我的时间了。</p></blockquote><p>问：    </p><blockquote><p>我的{程序、配置、SQL 语句}不运行了</p></blockquote><p>答：    </p><blockquote><p>这不是一个问题，我也没有兴趣去猜你有什么问题──我有更要紧的事要做。看到这种东西，我的反应一般如下：</p></blockquote><ul><li>你还有什么补充吗？</li><li>噢，太糟了，希望你能搞定。</li><li>这跟我究竟有什么关系？</li></ul><p>问：    </p><blockquote><p>我的视窗电脑出问题了，你能帮忙吗？</p></blockquote><p>答：    </p><blockquote><p>是的，把视窗垃圾删了，装个象 Linux 或 BSD 的开源操作系统吧。</p></blockquote><p>注意：如果程序有官方的视窗版或者与视窗有交互(如 Samba)，你 可以 问与视窗相关的问题，只是别对问题是由视窗操作系统而不是程序本身造成的回复感到惊讶，因为视窗一般来说太差，这种说法一般都成立。</p><p>问：    </p><blockquote><p>我的程序不运行了，我认为系统工具 X 有问题</p></blockquote><p>答：    </p><blockquote><p>你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文档作后盾。</p></blockquote><p>问：    </p><blockquote><p>我安装 Linux 或 X 遇到困难，你能帮忙吗？</p></blockquote><p>答：    </p><blockquote><p>不行，我需要亲手操作你的电脑才能帮你排错，去向当地的 Linux 用户组寻求方便的帮助（你可以在 这里 找到用户组列表）</p></blockquote><p>注意：如果安装问题与某 Linux 发行版有关，在针对 它 的邮件列表、论坛或本地用户组织中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 “linux”和 所有 被怀疑的硬件 [作关键词] 仔细搜索。</p><p>问：    </p><blockquote><p>我如何才能破解超级用户口令/盗取通道操作员的特权/查看某人的电子邮件？</p></blockquote><p>答：    </p><blockquote><p>想做这种事情说明你是个卑劣的家伙，想让黑客教你做这种事情说明你是个白痴。</p></blockquote><h4 id="好问题与坏问题"><a href="#好问题与坏问题" class="headerlink" title="好问题与坏问题"></a>好问题与坏问题</h4><p>最后，我将通过举例来演示提问的智慧。同样的问题两种提法，一种愚蠢，另一种明智。</p><p>愚蠢：我在哪能找到关于 Foonly Flurbamatic 设备的东西？</p><blockquote><p>这个问题在乞求得到 “搜搜该死的网络”（STFW） 式的回复。</p></blockquote><p>明智： 我用谷歌搜索过“Foonly Flurbamatic 2600”，但没有找到什么有用的，有谁知道在哪能找到这种设备的编程信息？</p><blockquote><p>这个人已经搜索过网络了，而且听起来他可能真的遇到了问题。</p></blockquote><p>愚蠢： 我不能编译某项目的源代码，它为什么这么破？</p><blockquote><p>提问者假设是别人搞砸了，太自大了。</p></blockquote><p>明智： 某项目的源代码不能在某 Linux 6.2 版下编译。我读了常见问题文档，但其中没有与某 Linux 相关的内容。这是编译时的记录，我做错了什么吗？</p><blockquote><p>提问者已经指明了运行环境，读了常见问题文档（FAQ），列出了错误，也没有假设问题是别人的过错，这家伙值得注意。</p></blockquote><p>愚蠢： 我的主板有问题，谁能帮我？</p><blockquote><p>某黑客对此的反应可能是：“是的，还需要帮你拍背和换尿布吗？”，然后是敲下删除键。</p></blockquote><p>明智： 我在 S2464 主板上试过 X、Y 和 Z，当它们都失败后，又试了 A、B 和 C。注意我试 C 时的奇怪症状，显然某某东西正在做某某事情，这不是期望的行为。通常在 Athlon MP 主板上导致某某事情的原因是什么？有谁知道我还能再试点什么以确定问题？</p><blockquote><p>相反地，这个人看来值得回答。他或她展现了解决问题的能力而不是坐等天上掉馅饼。</p></blockquote><p>在最后那个问题中，注意“给我一个回答”与“请帮我看看我还能再做点什么测试以得到启发”之间细微但重要的差别。</p><p>事实上，最后那个问题基本上源于 2001 年 8 月 Linux 内核邮件列表（lkml）上的真实事件，是我（Eric）当时提了那个问题，我发现 Tyan S2462 主板有神秘的死机现象，邮件列表成员给我提供了解决此问题的关键信息。</p><p>通过这种提问方式，我给了别人可以咀嚼玩味的东西。我设法使之对参与者既轻松又有吸引力，也表明了对同行能力的尊敬并邀请他们与我一起协商。通过告诉他们我已经走过的弯路，我还表明了对他们宝贵时间的尊重。</p><p>事后，当我感谢大家并评论这次良好的经历时，一个 Linux 内核邮件列表的成员谈到，他认为我得到答案并不是因为我的名字挂在列表上，而只是因为我正确的提问方式。</p><p>黑客们在某种方面是非常不留情面的精英分子。我想在这事上他是对的，如果我 表现得 象个不劳而获的寄生虫，不管我是谁都会被忽略或斥责。他建议将整个事件作为对其它人提问的指导，这直接导致了本文的编写。</p><h3 id="如果得不到回答"><a href="#如果得不到回答" class="headerlink" title="如果得不到回答"></a>如果得不到回答</h3><p>如果得不到回答，请不要认为我们不想帮你，有时只是因为被问到的小组成员的确不知道答案。没有回复不等于不被理睬，当然必须承认从外面很难看出两者的差别。</p><p>一般而言，直接将问题再张贴一次不好，这会被视为毫无意义的骚扰。耐心一点，知道你问题答案的人可能生活在不同的时区，有可能正在睡觉，也有可能你的问题一开始就没有组织好。</p><p>还有其它资源可以寻求帮助，通常是在一些面向新手的资源中。</p><p>有许多在线与本地的用户组织，虽然它们自己不编写任何软件，但是对软件很热心。这些用户组通常因互助和帮助新手而形成。</p><p>还有众多大小商业公司提供签约支持服务，别因为要付点钱才有支持就感到沮丧！毕竟，如果你车子的汽缸垫烧了，你多半还得花钱找个修理店把它弄好。即使软件没花你一分钱，你总不能指望服务支持都是免费的。</p><p>象 Linux 这样流行的软件，每个开发者至少有一万个以上的用户，一个人不可能应付这么多用户的服务要求。记住，即使你必须付费才能得到支持，也比你还得额外花钱买软件要少得多（而且对封闭源代码软件的服务支持与开源软件相比通常还要贵一点，也要差一点）。</p><h3 id="如何更好地回答"><a href="#如何更好地回答" class="headerlink" title="如何更好地回答"></a>如何更好地回答</h3><p>态度和善一点。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。</p><p>对初犯者私下回复。 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找 FAQ 都不知道。</p><p>如果你不确定，一定要说出来！ 一个听起来权威的错误回复比没有还要糟，别因为听起来象个专家好玩就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。</p><p>如果帮不了忙，别妨碍。 不要在具体步骤上开玩笑，那样也许会毁了用户的安装──有些可怜的呆瓜会把它当成真的指令。</p><p>探索性的反问以引出更多的细节。 如果你做得好，提问者可以学到点东西──你也可以。试试将很差的问题转变成好问题，别忘了我们都曾是新手。</p><p>尽管对那些懒虫报怨一声“读读该死的手册”（RTFM）是正当的，指出文档的位置（即使只是建议做个谷歌关键词搜索）会更好</p><p>如果你决意回答，给出好的答案。 当别人正在用错误的工具或方法时别建议笨拙的权宜之计，应推荐更好的工具，重新组织问题。</p><p>请回答真正的问题！如果提问者已经做了自己该做的研究，并且说明尝试过<code>X，Y，Z，A，B 与 C</code> 都没有得到想要的結果，那么回复 <code>试试 A 或 B</code> 或者给出一个内容为 <code>试一下 X，Y，Z，A，B 或 C</code> 的链接将极其无益！</p><p>帮助你的社区从中学习。当回复一个好问题时，问问自己 <code>如何修改相关文件或 FAQ 文档以免再次解答同样的问题？</code>，接着再向文档维护者发一份补丁。</p><p>如果你是在研究一番后才做出的回答，展现你的技巧而不是直接端出结果。毕竟“授人以鱼，不如授人以渔”。</p><h3 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h3><p>如果需要个人电脑、Unix 和互联网如何工作的基础知识，参阅 <a href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/">Unix 和互联网工作的基本原理</a>。</p><p>当你发布软件或补丁时，试着按 <a href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html">软件发布实践</a> 操作。</p><h3 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h3><p>伊夫林.米切尔（Evelyn Mitchell）贡献了一些愚蠢问题例子并启发了编写<code>如何更好地回答问题</code>这一节，米哈伊尔.罗门迪克（Mikhail Ramendik）贡献了一些特别有价值的建议和改进。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转载自&lt;a href=&quot;https://github.com/tvvocold/How-To-Ask-Questions-The-Smart-Way&quot;&gt;https://github.com/tvvocold/How-To-Ask-Questions</summary>
      
    
    
    
    
    <category term="提问" scheme="https://leostudiooo.github.io/tags/%E6%8F%90%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>新专辑：《星澜永恒》</title>
    <link href="https://leostudiooo.github.io/2021/02/26/album-stars/"/>
    <id>https://leostudiooo.github.io/2021/02/26/album-stars/</id>
    <published>2021-02-26T03:45:08.000Z</published>
    <updated>2021-08-16T08:19:26.485Z</updated>
    
    <content type="html"><![CDATA[<p>历经一周多的努力，新专辑《星澜永恒》终于发布在<a href="https://www.bilibili.com/video/BV1yA411M7Ac">哔哩哔哩</a>和<a href="https://music.163.com/#/song?id=1822296729">网易云</a>啦！</p><iframe src="//player.bilibili.com/player.html?aid=331836400&bvid=BV1yA411M7Ac&cid=302199953&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1822296729&auto=1&height=66"></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;历经一周多的努力，新专辑《星澜永恒》终于发布在&lt;a href=&quot;https://www.bilibili.com/video/BV1yA411M7Ac&quot;&gt;哔哩哔哩&lt;/a&gt;和&lt;a href=&quot;https://music.163.com/#/song?id=1822296729</summary>
      
    
    
    
    
    <category term="新砖" scheme="https://leostudiooo.github.io/tags/%E6%96%B0%E7%A0%96/"/>
    
    <category term="音乐" scheme="https://leostudiooo.github.io/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>传送带问题及解决策略</title>
    <link href="https://leostudiooo.github.io/2021/02/23/%E4%BC%A0%E9%80%81%E5%B8%A6%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E7%AD%96%E7%95%A5/"/>
    <id>https://leostudiooo.github.io/2021/02/23/%E4%BC%A0%E9%80%81%E5%B8%A6%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E7%AD%96%E7%95%A5/</id>
    <published>2021-02-23T13:30:00.000Z</published>
    <updated>2021-08-16T08:19:26.493Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h2><h3 id="按类"><a href="#按类" class="headerlink" title="按类"></a>按类</h3><ul><li>水平</li><li>倾斜</li></ul><h3 id="按转向"><a href="#按转向" class="headerlink" title="按转向"></a>按转向</h3><ul><li>顺时针</li><li>逆时针</li></ul><h2 id="解题策略"><a href="#解题策略" class="headerlink" title="解题策略"></a>解题策略</h2><h3 id="受力分析和运动分析"><a href="#受力分析和运动分析" class="headerlink" title="受力分析和运动分析"></a>受力分析和运动分析</h3><h4 id="一般情况"><a href="#一般情况" class="headerlink" title="一般情况"></a>一般情况</h4><p>首先根据初始条件比较物体对地速度$v_{物}$与传送带的速度$v_{传}$的大小和方向，明确物体所受摩擦力的种类、大小和方向，分析出其合外力$F_{合}$和加速度$a$，从而确定物体的运动性质。</p><h4 id="特殊判定"><a href="#特殊判定" class="headerlink" title="特殊判定"></a>特殊判定</h4><p>当$v_{物}=v{传}$时，判断能否保持相对静止。一般采用假设法：判断$f$是否在$[0,f_{静\max}]$之间，有必要时则结合$\mu$与$\tan \theta$之间的关系进行分析。</p><h3 id="参考系的选择"><a href="#参考系的选择" class="headerlink" title="参考系的选择"></a>参考系的选择</h3><p>举例：</p><ul><li>计算位移$x$以地面为参考系。</li><li>计算划痕长度$l$以传送带为参考系。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本类型&quot;&gt;&lt;a href=&quot;#基本类型&quot; class=&quot;headerlink&quot; title=&quot;基本类型&quot;&gt;&lt;/a&gt;基本类型&lt;/h2&gt;&lt;h3 id=&quot;按类&quot;&gt;&lt;a href=&quot;#按类&quot; class=&quot;headerlink&quot; title=&quot;按类&quot;&gt;&lt;/a&gt;按类&lt;/h</summary>
      
    
    
    
    
    <category term="物理" scheme="https://leostudiooo.github.io/tags/%E7%89%A9%E7%90%86/"/>
    
    <category term="小论文" scheme="https://leostudiooo.github.io/tags/%E5%B0%8F%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo在GitHub Pages部署属于你自己的博客！</title>
    <link href="https://leostudiooo.github.io/2021/02/23/hexo/"/>
    <id>https://leostudiooo.github.io/2021/02/23/hexo/</id>
    <published>2021-02-23T09:52:20.000Z</published>
    <updated>2021-08-16T08:19:26.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前期准备工作"><a href="#前期准备工作" class="headerlink" title="前期准备工作"></a>前期准备工作</h2><h3 id="创建一个-GitHub-账号（如有可跳过此步骤）"><a href="#创建一个-GitHub-账号（如有可跳过此步骤）" class="headerlink" title="创建一个 GitHub 账号（如有可跳过此步骤）"></a>创建一个 GitHub 账号（如有可跳过此步骤）</h3><p>点击<a href="http://www.github.com/">此链接</a>跳转到 GitHub，全球最大的代码托管网站。</p><p><img src="https://leostudiooo.github.io/img/gitsup.jpg" alt="img"></p><p>注册过程十分简单，这里不再赘述。</p><h3 id="在-GitHub-上创建一个新的项目。"><a href="#在-GitHub-上创建一个新的项目。" class="headerlink" title="在 GitHub 上创建一个新的项目。"></a>在 GitHub 上创建一个新的项目。</h3><p>单击 右上角【+】- New Repository 新建项目。（以下简称仓库）</p><p><img src="https://img2018.cnblogs.com/blog/1212465/201909/1212465-20190904143955779-1300863677.png" alt="img"></p><p>然后填写项目信息。</p><p>仓库的名字格式应为：<code>你的用户名.github.io</code> 。</p><p>比如我的用户名是<code>leostudiooo</code>，那么我的仓库就叫<code>leostudiooo.github.io</code>。</p><p>在<em>description</em>一栏填写简介。</p><p><img src="https://img-blog.csdnimg.cn/20181218144438464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hvaGFpeng=,size_16,color_FFFFFF,t_70" alt="img"></p><p>此处选择 <em>Public</em>。</p><p>然后勾选 <em>Initialize the repository with a README</em>。（此步的作用是用一个 README.md 对这个仓库进行初始化）</p><p>完成后点击下面的 <em>Create Repository</em>。</p><p>除此之外，你还需要一个能写 Markdown 的编辑器。我使用的是 <a href="https://typora.io">Typora</a>。</p><h2 id="部署-Hexo"><a href="#部署-Hexo" class="headerlink" title="部署 Hexo"></a>部署 Hexo</h2><h3 id="下载-Git-和-Node-js"><a href="#下载-Git-和-Node-js" class="headerlink" title="下载 Git 和 Node.js"></a>下载 Git 和 Node.js</h3><p>可以根据 <a href="http://bbs.jnschool.com/hexo.io">Hexo</a> 官网的教程下载。</p><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>在安装完 git 和 node.js 以后，我们需要打开 <code>cmd.exe</code>（如果你配置好了执行策略，<code>powershell</code> 也是一个不错的选择 。）</p><p><em>咋打开就不用说了吧…… Win+R 输入 <code>cmd</code> 回车</em></p><p>运行 <code>npm install -g hexo-cli</code> 来安装Hexo。</p><p>使用 <code>git clone</code> 命令克隆到本地。</p><p><code>cd</code> 切换到这个文件夹，运行 <code>npm install</code>。</p><p>这时候，你的文件夹里面会多出一堆文件。不要慌，慢慢来。</p><p>你的文件夹结构应该大致是这样：</p><pre class="language-none"><code class="language-none">.├── config.yml├── package.json├── scaffolds├── source|  ├── _drafts|  └── _posts└── themes</code></pre><p>然后，你可以参照 <a href="https://hexo.io/zh-cn/docs/configuration.html">Hexo 的官方教程</a> 对 <code>_config.yml</code> 进行配置。<br>接下来是几个常用命令：</p><p><code>hexo new</code>文章名称（之后你需要在 <code>/source/_posts/</code> 下找到你刚创建的 文章名称.md 并对其内容进行修改。）</p><p><code>hexo generate</code>（生成页面文件到/public/ 下）</p><p><code>hexo server</code>（本地服务器，用浏览器访问 localhost:4000 ）</p><p><code>hexo clean</code>（清除/public/ 下缓存文件，慎用！）</p><h3 id="安装一个好看的主题"><a href="#安装一个好看的主题" class="headerlink" title="安装一个好看的主题"></a>安装一个好看的主题</h3><p>安装 <a href="https://github.com/YunYouJun/hexo-theme-yun">hexo-theme-yun</a></p><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><p>编辑 <code>_config.yml</code>，在末尾添加如下内容：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git<span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/你的用户名/你的仓库 <span class="token comment">#e.g. https://github.com/leostudiooo/leostudiooo.github.io</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master <span class="token comment">#设置分支为master，默认是gh-pages</span></code></pre><p>然后在此目录下（命令行中）执行 <code>npm install hexo-deployer-git</code>。</p><p>接下来，执行 <code>hexo deploy</code> 部署到 GitHub。期间，会要求你登录。（如果你有其他文件需要一同部署到 GitHub Pages，请将它们复制到 <code>public/</code> 下。）</p><p>部署完成后，就大功告成啦！<br>如果你愿意折腾，也可以去试试Travis CI的自动部署。这是 <a href="https://blog.csdn.net/Xiong_IT/article/details/78675874">我参考的教程</a>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前期准备工作&quot;&gt;&lt;a href=&quot;#前期准备工作&quot; class=&quot;headerlink&quot; title=&quot;前期准备工作&quot;&gt;&lt;/a&gt;前期准备工作&lt;/h2&gt;&lt;h3 id=&quot;创建一个-GitHub-账号（如有可跳过此步骤）&quot;&gt;&lt;a href=&quot;#创建一个-GitHub-账</summary>
      
    
    
    
    
    <category term="教程" scheme="https://leostudiooo.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>常见的追及、相遇问题及解决策略</title>
    <link href="https://leostudiooo.github.io/2021/02/17/%E5%B8%B8%E8%A7%81%E7%9A%84%E8%BF%BD%E5%87%BB%E7%9B%B8%E9%81%87%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E7%AD%96%E7%95%A5/"/>
    <id>https://leostudiooo.github.io/2021/02/17/%E5%B8%B8%E8%A7%81%E7%9A%84%E8%BF%BD%E5%87%BB%E7%9B%B8%E9%81%87%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E7%AD%96%E7%95%A5/</id>
    <published>2021-02-17T06:19:00.000Z</published>
    <updated>2021-08-16T08:19:26.493Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h2><h3 id="追及"><a href="#追及" class="headerlink" title="追及"></a>追及</h3><ol><li><p>$B$在前，$A$在后，初始速度${V_A}_0&gt;{V_B}_0$</p><ol><li><p>若共速时（即$V_A=V_B$）有$x_B+x_0&gt;x_A$，则永远无法追上，且此时有最小位移差。</p></li><li><p>若共速时有$x_B+x_0=x_A$，则此时恰好追上。</p><p><em>P.S. 这也是判断碰撞的临界条件。</em></p></li><li><p>若两者相遇时$V_A&gt;V_B$，则还会再次相遇。</p></li></ol></li><li><p>$B$在前，$A$在后，初始速度${V_A}_0&lt;{V_B}_0$且$A$加速追赶</p><ol><li>当$V_A=V_B$时，有$\Delta x_{\max}$。</li><li>当$x_B+x_0=x_A$时，相遇。</li></ol></li></ol><h3 id="相遇"><a href="#相遇" class="headerlink" title="相遇"></a>相遇</h3><ul><li>同向运动的两个物体，追及即相遇。</li><li>相向运动的两物体，当各自发生的位移大小之和等于开始时两物体间的距离时相遇。</li></ul><h2 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h2><ol><li>分别对两物体进行研究</li><li>画出运动过程示意图</li><li>列出两物体的位移方程</li><li>找出时间和速度的关系</li><li>求解</li><li>（选）分类讨论</li></ol><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="临界条件法"><a href="#临界条件法" class="headerlink" title="临界条件法"></a>临界条件法</h3><p>当二者速度相等时，距离最远（最近）。</p><h3 id="图像法"><a href="#图像法" class="headerlink" title="图像法"></a>图像法</h3><p>画出x-t图像或v-t图像，并利用图像分析求解。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本类型&quot;&gt;&lt;a href=&quot;#基本类型&quot; class=&quot;headerlink&quot; title=&quot;基本类型&quot;&gt;&lt;/a&gt;基本类型&lt;/h2&gt;&lt;h3 id=&quot;追及&quot;&gt;&lt;a href=&quot;#追及&quot; class=&quot;headerlink&quot; title=&quot;追及&quot;&gt;&lt;/a&gt;追及&lt;/h</summary>
      
    
    
    
    
    <category term="物理" scheme="https://leostudiooo.github.io/tags/%E7%89%A9%E7%90%86/"/>
    
    <category term="小论文" scheme="https://leostudiooo.github.io/tags/%E5%B0%8F%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>运动学公式梳理和选用原则</title>
    <link href="https://leostudiooo.github.io/2021/02/14/%E8%BF%90%E5%8A%A8%E5%AD%A6/"/>
    <id>https://leostudiooo.github.io/2021/02/14/%E8%BF%90%E5%8A%A8%E5%AD%A6/</id>
    <published>2021-02-14T06:56:00.000Z</published>
    <updated>2021-08-16T08:19:26.493Z</updated>
    
    <content type="html"><![CDATA[<h2 id="位移"><a href="#位移" class="headerlink" title="位移"></a>位移</h2><ol><li><p>位移在<strong>一维</strong>直线坐标系中的表示</p><p>$\Delta x=x_2-x_1$</p><p>其中，$\Delta x$为位移，起始位置为$x_1$，停止位置为$x_2$。</p></li></ol><h2 id="速度和速率"><a href="#速度和速率" class="headerlink" title="速度和速率"></a>速度和速率</h2><h3 id="速度"><a href="#速度" class="headerlink" title="速度"></a>速度</h3><ol><li><p>速度的表达式</p><p>$v=\frac{\Delta x}{\Delta t}$</p><p>其中，$v$为速度，$x$为位移，$t$为发生这段位移所用的时间。</p><p>速度是<strong>矢量</strong>。</p><p><strong><em>P.S.</em></strong> <em>速度一般指<strong>瞬时速度</strong>。</em></p></li><li><p>平均速度的表达式</p><p>$\bar v=\frac{\Delta x}{\Delta t}$</p><p>其中，$\bar v$为平均速度，$\Delta x$和$\Delta t$分别为位移和发生这段位移所用的时间。</p><p><strong><em>P.S.</em></strong> <em>平均速度是对物体运动方向和快慢的<strong>粗略描述</strong>。</em></p></li><li><p>瞬时速度的表达式</p><p>$\lim\limits_{\Delta t\to0}$ $v=\frac{\Delta x}{\Delta t}$</p><p>当$\Delta t$无限小时，算出来的速度就是物体在这个瞬间的瞬时速度。</p><p><strong><em>P.S.</em></strong> <em>瞬时速度是对物体运动方向和快慢的<strong>精确描述</strong>。</em></p></li></ol><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><ol><li><p>速率的表达式</p><p>$v_{速率}=\frac{\Delta s}{\Delta t}$</p><p>与速度不同，在速率的表达式中，$s$为路程。</p><p>因此，速率是<strong>标量</strong>。</p></li><li><p>平均速率和瞬时速率的表达式</p><p>与平均速度和瞬时速度的表达式相似，不再赘述。</p><p>$\bar v_{速率}=\frac{\Delta s}{\Delta t}$</p><p>$\lim\limits_{\Delta t\to0}$ $v_{速率}=\frac{\Delta s}{\Delta t}$</p></li></ol><h2 id="加速度和匀变速直线运动"><a href="#加速度和匀变速直线运动" class="headerlink" title="加速度和匀变速直线运动"></a>加速度和匀变速直线运动</h2><h3 id="加速度"><a href="#加速度" class="headerlink" title="加速度"></a>加速度</h3><ol><li><p>定义式：</p><p>$a=\frac{\Delta v}{\Delta t}$</p><p>其中，$a$是加速度，$\Delta v$是速度变化量，$\Delta t$是发生这一速度变化所需要的时间。</p><p>由此，加速度是<strong>矢量</strong>。</p><p><strong><em>P.S.</em></strong> <em>加速度与$\Delta v$和$\Delta t$<strong>无关</strong>，这里它们只用来计算加速度。</em></p></li></ol><h3 id="匀变速直线运动"><a href="#匀变速直线运动" class="headerlink" title="匀变速直线运动"></a>匀变速直线运动</h3><ol><li><p>速度与时间的关系</p><p>$v_t=v_0+at$</p><p>特别地：</p><ol><li>当$v_0=0$时，$v_t=at$；</li><li>当$a=0$时，$v_t=v_0$。</li></ol><p><strong><em>P.S.</em></strong> <em>在该公式中，$v_t$、$v_0$、$a$均为<strong>矢量</strong>，因此应用公式时<strong>应首先选取正方向</strong>。</em></p></li><li><p>位移与时间的关系</p><p>$x=v_0t+\frac{1}{2}at^2$</p><p>特别地：</p><ol><li>当$v_0=0$时，$x=\frac{1}{2}at^2$</li><li>当$a=0$时，$x=v_0t$</li></ol><p><strong><em>P.S.</em></strong>  <em>在<strong>刹车问题</strong>中，使用该公式计算位移需要<strong>先判断物体是否已经停止</strong>。</em></p></li><li><p>平均速度</p><ol><li><p>$\bar v=\frac x t$</p><p>该式适用于<strong>任意情况</strong>。</p></li><li><p>$\bar v=v_\frac t 2$</p><p>该式仅适用于<strong>匀变速直线运动</strong>。</p></li><li><p>$\bar v= \frac{v_0+v_t}{2}$</p><p>该式也仅适用于<strong>匀变速直线运动</strong>。</p></li></ol></li><li><p>位移差公式</p><p>匀变速直线运动中，在任意相邻相等时间$T$内，位移差$\Delta x$是一个常量，即</p><p>$\Delta x=x_2-x_1=aT^2$</p><p><strong><em>P.S.</em></strong> <em>该式可以用来<strong>判断物体是否作匀变速直线运动</strong>，也可以用来<strong>计算匀变速直线运动的物体的加速度</strong>。</em></p></li><li><p>自由落体运动</p><p>是$v_0=0$，$a=g$的匀加速直线运动。</p></li><li><p>匀变速直线运动的规律</p><ol><li><p>$2ax=v_t^2-v_0^2$</p></li><li><p>$v_0=0$时有：</p><ol><li><p>按时间等分：</p><ul><li>$v_1:v_2:v_3:…:v_n=1:2:3:…:n$</li><li>$x_1:x_2:x_3:…:x_n=1^2:2^2:3^2:…:n^2$</li><li>$\Delta x_1:\Delta x_2:\Delta x_3:…:\Delta x_n=1:3:5:…:2n-1$</li></ul></li><li><p>按位移等分：</p><ul><li>$v_1:v_2:v_3:…:v_n=1:\sqrt 2:\sqrt 3:…:\sqrt n$</li><li>$t_1:t_2:t_3:…:t_n=1:\sqrt{2}:\sqrt{3}:…:\sqrt{n}$</li><li>$\Delta t_1:\Delta t_2:\Delta t_3:…:\Delta t_n=1:\left(\sqrt{2}-1\right):\left(\sqrt{3}-\sqrt {2}\right):\left(\sqrt{n}-\sqrt{n-1}\right)$</li></ul><p><strong><em>P.S. $v_0$必须要为零！</em></strong></p></li></ol></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;位移&quot;&gt;&lt;a href=&quot;#位移&quot; class=&quot;headerlink&quot; title=&quot;位移&quot;&gt;&lt;/a&gt;位移&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;位移在&lt;strong&gt;一维&lt;/strong&gt;直线坐标系中的表示&lt;/p&gt;
&lt;p&gt;$\Delta x=x_2-x_1$&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="物理" scheme="https://leostudiooo.github.io/tags/%E7%89%A9%E7%90%86/"/>
    
    <category term="小论文" scheme="https://leostudiooo.github.io/tags/%E5%B0%8F%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>2021寒假计划</title>
    <link href="https://leostudiooo.github.io/2021/01/30/wintervacation-plan/"/>
    <id>https://leostudiooo.github.io/2021/01/30/wintervacation-plan/</id>
    <published>2021-01-30T07:28:05.000Z</published>
    <updated>2021-08-16T08:19:26.492Z</updated>
    
    <content type="html"><![CDATA[<h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><h4 id="语文"><a href="#语文" class="headerlink" title="语文"></a>语文</h4><h5 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h5><ul><li><p>巴黎圣母院</p></li><li><p>家</p></li></ul><h5 id="书面"><a href="#书面" class="headerlink" title="书面"></a>书面</h5><ul><li>语文报三个专题</li><li>推荐两本书</li></ul><h4 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h4><h5 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h5><ul><li>必修一到必修四 三角函数</li></ul><h5 id="预习"><a href="#预习" class="headerlink" title="预习"></a>预习</h5><ul><li>向量、三角恒等变换</li></ul><h5 id="书面-1"><a href="#书面-1" class="headerlink" title="书面"></a>书面</h5><ul><li>并完成相应作业（-2）</li></ul><h5 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h5><ul><li>高层小区调查表</li></ul><h4 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h4><ul><li>英语周报</li><li>背单词</li><li>presentation</li><li>字帖</li></ul><h4 id="物理"><a href="#物理" class="headerlink" title="物理"></a>物理</h4><ul><li>黄金假日</li><li>学科论文</li><li>科技制作</li></ul><h4 id="化学"><a href="#化学" class="headerlink" title="化学"></a>化学</h4><ul><li>赢在假期</li><li>梳理教材</li></ul><h4 id="生物"><a href="#生物" class="headerlink" title="生物"></a>生物</h4><ul><li>假期百分百 1~9</li></ul><h4 id="地理"><a href="#地理" class="headerlink" title="地理"></a>地理</h4><ul><li>填充图册 15-25,61-77,81-84</li></ul><h4 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h4><ul><li>假期百分百</li></ul><h4 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h4><ul><li>观看新闻类节目并作时政评析（4篇）</li></ul><h3 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h3><blockquote><p>2021年寒假：2021-2-1到2021-2-27，共27天。</p></blockquote><p>见 Microsoft To-do &amp; 番茄 Todo。</p><h4 id="作息"><a href="#作息" class="headerlink" title="作息"></a>作息</h4><table><thead><tr><th>时间</th><th>内容</th></tr></thead><tbody><tr><td>0645</td><td>起床洗漱</td></tr><tr><td>0700</td><td>跑步</td></tr><tr><td>0730</td><td>背单词</td></tr><tr><td>0800</td><td>早餐</td></tr><tr><td>0830</td><td>作业（25+5, 3x）</td></tr><tr><td>1000</td><td>休息（运动等）</td></tr><tr><td>1030</td><td>作业（25+5, 3x）</td></tr><tr><td>1200</td><td>午餐</td></tr><tr><td>1230</td><td>午休</td></tr><tr><td>1400</td><td>阅读</td></tr><tr><td>1440</td><td>休息</td></tr><tr><td>1450</td><td>阅读</td></tr><tr><td>1530</td><td>休息</td></tr><tr><td></td><td>自由安排</td></tr><tr><td>1800</td><td>晚餐</td></tr><tr><td>1900</td><td>晚自习（2.1~2.5,2.21~2.25）</td></tr><tr><td>2130</td><td>洗漱</td></tr><tr><td>2240</td><td>就寝</td></tr></tbody></table><blockquote><p> P.S. 学校作业完成后可在作业时间安排复习。</p></blockquote><h4 id="时间计划"><a href="#时间计划" class="headerlink" title="时间计划"></a>时间计划</h4><blockquote><p>标准时间为25min，即一个标准番茄钟。</p></blockquote><table><thead><tr><th>项目</th><th>时间</th><th>数量</th></tr></thead><tbody><tr><td>语文报</td><td>2x2</td><td>1/3</td></tr><tr><td>英语周报</td><td>1x2</td><td>1/6</td></tr><tr><td>数学</td><td>1x1</td><td>1/16</td></tr><tr><td>英语字帖</td><td>1x1</td><td>3/37</td></tr><tr><td>物理 黄金假日</td><td>1x1</td><td>1/11</td></tr><tr><td>生物</td><td>1x1</td><td>1/9</td></tr><tr><td>化学</td><td>1x1</td><td>1/14</td></tr><tr><td>地理</td><td>1x1</td><td>10/30</td></tr><tr><td>政治</td><td>1x2</td><td>1/4</td></tr><tr><td>历史</td><td>1x1</td><td>5/14</td></tr></tbody></table><blockquote><p>P.S. 根据时间计划安排。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;作业&quot;&gt;&lt;a href=&quot;#作业&quot; class=&quot;headerlink&quot; title=&quot;作业&quot;&gt;&lt;/a&gt;作业&lt;/h2&gt;&lt;h3 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h3&gt;&lt;h4 id</summary>
      
    
    
    
    
    <category term="计划" scheme="https://leostudiooo.github.io/tags/%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>题解-7940(OpenJudge)</title>
    <link href="https://leostudiooo.github.io/2020/12/26/openjudge-7940/"/>
    <id>https://leostudiooo.github.io/2020/12/26/openjudge-7940/</id>
    <published>2020-12-26T08:31:32.000Z</published>
    <updated>2021-08-16T08:19:26.489Z</updated>
    
    <content type="html"><![CDATA[<p>也是一次AC！（虽然有一次格式错误但我相信你们不会在意的对吧）</p><h2 id="题目传送门"><a href="#题目传送门" class="headerlink" title="题目传送门"></a>题目传送门</h2><p><a href="http://noi.openjudge.cn/ch0111/01">http://noi.openjudge.cn/ch0111/01</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>特判 如大于所有数据或小于所有数据</li><li>其他 用二分法搜索最接近数据，再比较距离，然后输出</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/*http://noi.openjudge.cn/ch0111/01*/</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment">// struct record&#123;本来想用结构体写功能，后来放弃了</span><span class="token comment">// long long arrn;</span><span class="token comment">// long long arrl;</span><span class="token comment">// long long arrr;</span><span class="token comment">// &#125;;</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">sch</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span><span class="token keyword">long</span> <span class="token keyword">long</span> lim<span class="token punctuation">,</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> mid<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">+</span>r<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>l<span class="token operator">-</span>r<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>lim<span class="token operator">-</span>arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token function">abs</span><span class="token punctuation">(</span>lim<span class="token operator">-</span>arr<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> arr<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">return</span> arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>lim<span class="token operator">></span>arr<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> arr<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>lim<span class="token operator">&lt;</span>arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>lim<span class="token operator">==</span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>lim<span class="token operator">></span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">sch</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>lim<span class="token punctuation">,</span>mid<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>lim<span class="token operator">&lt;</span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">sch</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>lim<span class="token punctuation">,</span>l<span class="token punctuation">,</span>mid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//freopen("7940.in","r",stdin);</span><span class="token keyword">int</span> n<span class="token punctuation">;</span>cin<span class="token operator">>></span>n<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>a<span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//防止测试点数据乱序</span><span class="token keyword">int</span> m<span class="token punctuation">;</span>cin<span class="token operator">>></span>m<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> num<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cin<span class="token operator">>></span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>cout<span class="token operator">&lt;&lt;</span><span class="token function">sch</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;也是一次AC！（虽然有一次格式错误但我相信你们不会在意的对吧）&lt;/p&gt;
&lt;h2 id=&quot;题目传送门&quot;&gt;&lt;a href=&quot;#题目传送门&quot; class=&quot;headerlink&quot; title=&quot;题目传送门&quot;&gt;&lt;/a&gt;题目传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://noi</summary>
      
    
    
    
    
    <category term="oi" scheme="https://leostudiooo.github.io/tags/oi/"/>
    
    <category term="openjudge" scheme="https://leostudiooo.github.io/tags/openjudge/"/>
    
    <category term="C++" scheme="https://leostudiooo.github.io/tags/C/"/>
    
    <category term="题解" scheme="https://leostudiooo.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解-P4414</title>
    <link href="https://leostudiooo.github.io/2020/10/24/tijie-p4414/"/>
    <id>https://leostudiooo.github.io/2020/10/24/tijie-p4414/</id>
    <published>2020-10-24T04:07:00.000Z</published>
    <updated>2021-08-16T08:19:26.491Z</updated>
    
    <content type="html"><![CDATA[<p>纪念史上首次 <a href="https://www.luogu.com.cn/record/40400035">一次性 AC</a>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>输入三个数到数组中并排序；<br>输入三个字母 <code>A</code> <code>B</code> <code>C</code> ；<br>通过 <code>switch</code> 语句进行分类讨论输出；</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>cin<span class="token operator">>></span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">sort</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//cout&lt;&lt;n[0]&lt;&lt;n[1]&lt;&lt;n[2];（debug测试用）</span><span class="token keyword">char</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>cin<span class="token operator">>></span>a<span class="token operator">>></span>b<span class="token operator">>></span>c<span class="token punctuation">;</span><span class="token comment">//scanf("%c%c%c",&amp;a,&amp;b,&amp;c);（用scanf我发现读入不了c所以改用cin）</span><span class="token keyword">switch</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token char">'A'</span><span class="token operator">:</span>cout<span class="token operator">&lt;&lt;</span>n<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'B'</span><span class="token operator">:</span>cout<span class="token operator">&lt;&lt;</span>n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'C'</span><span class="token operator">:</span>cout<span class="token operator">&lt;&lt;</span>n<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">switch</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token char">'A'</span><span class="token operator">:</span>cout<span class="token operator">&lt;&lt;</span>n<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'B'</span><span class="token operator">:</span>cout<span class="token operator">&lt;&lt;</span>n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'C'</span><span class="token operator">:</span>cout<span class="token operator">&lt;&lt;</span>n<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">switch</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token char">'A'</span><span class="token operator">:</span>cout<span class="token operator">&lt;&lt;</span>n<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'B'</span><span class="token operator">:</span>cout<span class="token operator">&lt;&lt;</span>n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'C'</span><span class="token operator">:</span>cout<span class="token operator">&lt;&lt;</span>n<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>祝各位1024节快乐！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;纪念史上首次 &lt;a href=&quot;https://www.luogu.com.cn/record/40400035&quot;&gt;一次性 AC&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;</summary>
      
    
    
    
    
    <category term="oi" scheme="https://leostudiooo.github.io/tags/oi/"/>
    
    <category term="C++" scheme="https://leostudiooo.github.io/tags/C/"/>
    
    <category term="题解" scheme="https://leostudiooo.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="洛谷" scheme="https://leostudiooo.github.io/tags/%E6%B4%9B%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>题解 - P1085</title>
    <link href="https://leostudiooo.github.io/2020/10/03/tijie-p1085/"/>
    <id>https://leostudiooo.github.io/2020/10/03/tijie-p1085/</id>
    <published>2020-10-03T02:25:02.000Z</published>
    <updated>2021-08-16T08:19:26.491Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始搞 OI 了，在 luogu.com.cn 刷题</p><pre class="language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">0</span>b <span class="token operator">=</span> <span class="token number">0</span>maxtime <span class="token operator">=</span> <span class="token number">0</span>answer <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">#初始化输出answer为0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#重复7次</span>    a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#读入a和b</span>    a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>    b <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>    <span class="token keyword">if</span> a<span class="token operator">+</span>b <span class="token operator">></span> maxtime <span class="token keyword">and</span> a<span class="token operator">+</span>b <span class="token operator">></span> <span class="token number">8</span><span class="token punctuation">:</span>   <span class="token comment">#判断ab之和是否大于当前最大时间且大于8h（用>而不用>=是因为要求输出更靠前的一天）</span>        answer <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span>        maxtime <span class="token operator">=</span> a<span class="token operator">+</span>b<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">#输出answer</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近开始搞 OI 了，在 luogu.com.cn 刷题&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;a &lt;span class=&quot;token o</summary>
      
    
    
    
    
    <category term="oi" scheme="https://leostudiooo.github.io/tags/oi/"/>
    
    <category term="题解" scheme="https://leostudiooo.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="洛谷" scheme="https://leostudiooo.github.io/tags/%E6%B4%9B%E8%B0%B7/"/>
    
    <category term="Python" scheme="https://leostudiooo.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>题解 - P5716</title>
    <link href="https://leostudiooo.github.io/2020/10/02/tijie-p5716/"/>
    <id>https://leostudiooo.github.io/2020/10/02/tijie-p5716/</id>
    <published>2020-10-02T13:59:59.000Z</published>
    <updated>2021-08-16T08:19:26.491Z</updated>
    
    <content type="html"><![CDATA[<p>原题链接：<a href="https://www.luogu.com.cn/problem/P5716">https://www.luogu.com.cn/problem/P5716</a></p><pre class="language-python" data-language="python"><code class="language-python">yr<span class="token punctuation">,</span> mon <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#输入年份和月份</span>yr <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>yr<span class="token punctuation">)</span>mon <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>mon<span class="token punctuation">)</span>runvar <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment">#该变量的值用来判定是否为闰年（若闰年则为True，非闰年则为False）</span>days <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#定义用于判断闰年的函数</span>    <span class="token keyword">global</span> runvar    yr1 <span class="token operator">=</span> yr <span class="token operator">%</span> <span class="token number">100</span>    <span class="token comment">#判断年份是否能被100整除</span>    <span class="token keyword">if</span> yr1 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> yr <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span><span class="token comment">#判断年份是否能被4整除</span>            runvar <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            runvar <span class="token operator">=</span> <span class="token boolean">False</span>        <span class="token keyword">elif</span> yr1 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> yr <span class="token operator">%</span> <span class="token number">400</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>            runvar <span class="token operator">=</span> <span class="token boolean">False</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            runvar <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">def</span> <span class="token function">day</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#定义用于判断天数的函数</span>    <span class="token keyword">global</span> days    <span class="token keyword">if</span> mon <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token comment">#2月单独作为一种情况</span>        <span class="token keyword">if</span> runvar <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            days <span class="token operator">=</span> <span class="token number">29</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            days <span class="token operator">=</span> <span class="token number">28</span>    <span class="token keyword">elif</span> mon <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">or</span> mon <span class="token operator">==</span> <span class="token number">3</span> <span class="token keyword">or</span> mon <span class="token operator">==</span> <span class="token number">5</span> <span class="token keyword">or</span> mon <span class="token operator">==</span> <span class="token number">7</span> <span class="token keyword">or</span> mon <span class="token operator">==</span> <span class="token number">8</span> <span class="token keyword">or</span> mon <span class="token operator">==</span> <span class="token number">10</span> <span class="token keyword">or</span> mon <span class="token operator">==</span> <span class="token number">12</span><span class="token punctuation">:</span>        days <span class="token operator">=</span> <span class="token number">31</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        days <span class="token operator">=</span> <span class="token number">30</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>day<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>days<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#输出</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;原题链接：&lt;a href=&quot;https://www.luogu.com.cn/problem/P5716&quot;&gt;https://www.luogu.com.cn/problem/P5716&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; data-la</summary>
      
    
    
    
    
    <category term="oi" scheme="https://leostudiooo.github.io/tags/oi/"/>
    
    <category term="题解" scheme="https://leostudiooo.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="洛谷" scheme="https://leostudiooo.github.io/tags/%E6%B4%9B%E8%B0%B7/"/>
    
    <category term="Python" scheme="https://leostudiooo.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>使用树莓派搭建无线打印机</title>
    <link href="https://leostudiooo.github.io/2020/08/17/raspberry-pi-cups-wireless-printer/"/>
    <id>https://leostudiooo.github.io/2020/08/17/raspberry-pi-cups-wireless-printer/</id>
    <published>2020-08-17T02:17:42.000Z</published>
    <updated>2021-08-16T08:19:26.490Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用树莓派搭建无线打印机"><a href="#使用树莓派搭建无线打印机" class="headerlink" title="使用树莓派搭建无线打印机"></a>使用树莓派搭建无线打印机</h1><h2 id="所需器材"><a href="#所需器材" class="headerlink" title="所需器材"></a>所需器材</h2><ul><li><input checked="" disabled="" type="checkbox"> 树莓派</li><li><input checked="" disabled="" type="checkbox"> 打印机</li><li><input checked="" disabled="" type="checkbox"> 数据线</li><li><input disabled="" type="checkbox"> 网线（可选）</li><li><input checked="" disabled="" type="checkbox"> 网络连接 (LAN/WLAN)</li></ul><h2 id="CUPS介绍"><a href="#CUPS介绍" class="headerlink" title="CUPS介绍"></a>CUPS介绍</h2><p><a href="https://cups.org">CUPS</a> (Common UNIX Printing System，通用 Unix 打印系统)是 Fedora Core 3 中支持的打印系统，它主要是使用 IPP (Internet Printing Protocol) 来管理打印工作及队列，但同时也支持 LPD (Line Printer Daemon) 和 SMB (Server Message Block) 以及 AppSocket 等通信协议。</p><p>Unix/Linux 下打印总是有许多限制。但若安装了 CUPS（Common UNIX Printing System），你将会得到一个完整的打印解决方案。</p><p>在UNIX/Linux 下打印的方法很久以来都是用 LPD（命令行方式的打印守护程序），它不支持 IPP（Internet打印协议），而且也不支持同时使用多个打印设备。</p><p>CUPS给Unix/Linux用户提供了一种可靠有效的方法来管理打印。它支持 IPP，并提供了LPD，SMB（服务消息块，如配置为微软 Windows 的打印机）、JetDirect 等接口。CUPS 还可以浏览网络打印机。</p><p><em>(以上内容来自百度百科)</em></p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="静态IP设置"><a href="#静态IP设置" class="headerlink" title="静态IP设置"></a>静态IP设置</h3><p>编辑 <code>/etc/dhcpcd.conf</code>，在文件末尾添加如下内容：</p><pre class="language-conf" data-language="conf"><code class="language-conf">interface eth0static ip_address&#x3D;192.168.0.10&#x2F;24static routers&#x3D;192.168.0.1static domain_name_servers&#x3D;192.168.0.1interface wlan0static ip_address&#x3D;192.168.0.200&#x2F;24static routers&#x3D;192.168.0.1static domain_name_servers&#x3D;192.168.0.1</code></pre><p>其中，<code>eth0</code>是有线的配置，<code>wlan0</code> 是无线配置</p><p> <code>ip_address</code>就是静态 IP，后面要接 <code>/24</code> (e.g 192.168.1.12/24)</p><p> <code>routers</code> 是网关 (e.g. 192.168.1.1)</p><p> <code>static domain_name_servers</code> 是 DNS (e.g. 192.168.1.1)</p><p> 然后再在命令行执行：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">reboot</span></code></pre><h3 id="安装-CUPS"><a href="#安装-CUPS" class="headerlink" title="安装 CUPS"></a>安装 CUPS</h3><p>在终端中执行：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> cups</code></pre><p>或者</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> cups</code></pre><p>然后静待安装。</p><h3 id="配置-CUPS"><a href="#配置-CUPS" class="headerlink" title="配置 CUPS"></a>配置 CUPS</h3><h4 id="添加-pi-到管理员账户"><a href="#添加-pi-到管理员账户" class="headerlink" title="添加 pi 到管理员账户"></a>添加 pi 到管理员账户</h4><p>继续执行：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">usermod</span> -a -G lpadmin pi</code></pre><p>这一步的作用是令<code>pi</code>用户（或者其他用户，这里以<code>pi</code>为例）成为管理员，否则我们无法通过该用户配置打印机。</p><p>现在，将打印机的USB线缆插入到树莓派的USB端口中。</p><h4 id="登陆-CUPS-后台"><a href="#登陆-CUPS-后台" class="headerlink" title="登陆 CUPS 后台"></a>登陆 CUPS 后台</h4><p>用浏览器访问<code>刚才设置的静态IP地址:631/admin</code>。</p><p>单击<code>Add Printer</code>，网页会要求你输入刚才配置的管理员账户的用户名和密码。</p><p><img src="https://leostudiooo.github.io/img/image-20200817123416365.png" alt="image-20200817123416365"></p><h4 id="配置打印机"><a href="#配置打印机" class="headerlink" title="配置打印机"></a>配置打印机</h4><h5 id="选择打印机"><a href="#选择打印机" class="headerlink" title="选择打印机"></a>选择打印机</h5><p>如果没有问题，你现在应该看到这样一个界面：</p><p><img src="https://leostudiooo.github.io/img/image-20200817123822823.png" alt="image-20200817123822823"></p><p>在 <code>Local Printers</code> 找到你的打印机并选中（我的就是那个 <code>Canon MP280 Series</code>），如果没有请选择类似这样 <code>usb://Canon/MP280%20series?serial=A0F451&amp;interface=1</code> 的选项。</p><p><img src="https://leostudiooo.github.io/img/image-20200817124230606.png" alt="image-20200817124230606"></p><p>如果你的是网络打印机，请在 <code>Network Printers</code> 中选中相应协议，或添加已扫描到的打印机。</p><p>然后单击 <code>Continue</code>。</p><h5 id="添加描述并共享打印机"><a href="#添加描述并共享打印机" class="headerlink" title="添加描述并共享打印机"></a>添加描述并共享打印机</h5><p>描述随便写（默认就行）。但一定要尽量短。</p><p><code>Location</code> 随便填就行，如 <code>Pi</code>, <code>Lab</code> 等等。</p><p>记住勾选 <code>Share This Printer</code>！</p><p><img src="https://leostudiooo.github.io/img/image-20200817124634571.png" alt="image-20200817124634571"></p><h5 id="选择驱动"><a href="#选择驱动" class="headerlink" title="选择驱动"></a>选择驱动</h5><p>一般选最靠上的那个就行了。看清楚驱动型号！</p><p><img src="https://leostudiooo.github.io/img/image-20200817124956133.png" alt="image-20200817124956133"></p><p>至此，打印机的配置就完成了。[]~(￣▽￣)~</p><p>你可以在 <code>树莓派IP:631</code> 管理你的打印机。</p><h3 id="配置电脑端"><a href="#配置电脑端" class="headerlink" title="配置电脑端"></a>配置电脑端</h3><h4 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h4><p>打开 <code>设置-设备-打印机和扫描仪</code>。点击 <code>添加打印机和扫描仪</code>。</p><p>此时，电脑会自动开始搜索打印机设备。</p><p>一般来说，电脑可以自动搜索到你的打印机，且命名格式为<code>你的打印机名称@树莓派IP</code>。</p><p>如果没有搜索到，请点击 <code>我需要的打印机不在列表中</code>，并参照Windows 7及以下的方法操作。</p><h4 id="Windows-7及以下"><a href="#Windows-7及以下" class="headerlink" title="Windows 7及以下"></a>Windows 7及以下</h4><p>打开 <code>控制面板-设备和打印机-添加打印机</code>。</p><p>点击 <code>按名称选择共享打印机</code>。</p><p>打开刚才的网页，复制地址（如 <a href="https://192.168.1.12:631/printers/Canon_MP280_series），粘贴到文本框中。">https://192.168.1.12:631/printers/Canon_MP280_series），粘贴到文本框中。</a></p><p>选择合适的驱动。</p><p>然后点击完成（推荐打印一张测试页）。</p><h4 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h4><p>见 <a href="https://support.apple.com/zh-cn/guide/mac-help/mh14004/10.15/mac/10.15">Apple支持文档</a> <code>按 IP 地址添加网络打印机</code> 部分，填入地址（如 <a href="https://192.168.1.12:631/printers/Canon_MP280_series）。">https://192.168.1.12:631/printers/Canon_MP280_series）。</a></p><h4 id="GNU-Linux"><a href="#GNU-Linux" class="headerlink" title="GNU/Linux"></a>GNU/Linux</h4><p>这篇教程就是针对Linux的啊喂。</p><p>按照 <a href="#安装CUPS">上面的操作步骤</a> 添加打印机（协议为 http 或者 https）。</p><p>至此，本教程圆满结束！(完结撒花.jpg)</p><p>哔哩哔哩：<a href="https://space.bilibili.com/244815810">https://space.bilibili.com/244815810</a></p><p>GitHub：<a href="https://github.com/leostudiooo">https://github.com/leostudiooo</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用树莓派搭建无线打印机&quot;&gt;&lt;a href=&quot;#使用树莓派搭建无线打印机&quot; class=&quot;headerlink&quot; title=&quot;使用树莓派搭建无线打印机&quot;&gt;&lt;/a&gt;使用树莓派搭建无线打印机&lt;/h1&gt;&lt;h2 id=&quot;所需器材&quot;&gt;&lt;a href=&quot;#所需器材&quot; cla</summary>
      
    
    
    
    
    <category term="how" scheme="https://leostudiooo.github.io/tags/how/"/>
    
    <category term="raspberrypi" scheme="https://leostudiooo.github.io/tags/raspberrypi/"/>
    
    <category term="printer" scheme="https://leostudiooo.github.io/tags/printer/"/>
    
    <category term="cups" scheme="https://leostudiooo.github.io/tags/cups/"/>
    
  </entry>
  
  <entry>
    <title>如何制作开源Surface Dial</title>
    <link href="https://leostudiooo.github.io/2020/07/04/how-to-make-an-open-source-dial/"/>
    <id>https://leostudiooo.github.io/2020/07/04/how-to-make-an-open-source-dial/</id>
    <published>2020-07-04T04:11:42.000Z</published>
    <updated>2021-08-16T08:19:26.489Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本项目由我和<a href="https://space.bilibili.com/8555835">B站UP主 EddyWang</a>共同维护。<a href="https://github.com/Eddddddddy/Surface_Dial_Arduino">GitHub仓库</a>中有此项目源文件，欢迎访问下载。</p><p>目前，该项目有两个版本 (Pro&amp;Lite)，后期会进行整合。</p><h3 id="如何制作？"><a href="#如何制作？" class="headerlink" title="如何制作？"></a>如何制作？</h3><p> <a href="https://www.bilibili.com/video/BV17K411W78w"><img src="https://leostudiooo.github.io/img/bili.png" alt="视频教程(Pro版，由Eddy制作)"></a></p><p>Lite版的视频暂时还没时间做。</p><h4 id="1-将项目clone到本地"><a href="#1-将项目clone到本地" class="headerlink" title="1. 将项目clone到本地"></a>1. 将项目clone到本地</h4><p>如图，点击 clone 下的 Download zip（当然如果你有一定的 GitHub 基础可以直接 clone 到本地）</p><img src="leostudiooo.github.io/img/image-20200621184306016.png" alt="image-20200621184306016"  /><p>下载完成后解压。</p><p>文件目录结构如下：</p><pre class="language-none"><code class="language-none">Surface_Dial_Arduino│  .gitignore│  bom.xlsx│  LICENSE│  README.md│├─lib &#x2F;&#x2F;所需库│  └─TrinketHidCombo│├─PCB_with_gerber &#x2F;&#x2F;PCB和打板文件│  │  Gerber_2in1.zip &#x2F;&#x2F;二合一打板文件│  │  README.md│  ││  ├─Lite│  │      BOM_Project Dial Lite.csv│  │      Gerber_Project Dial Lite.zip &#x2F;&#x2F;Lite打板文件│  │      Project Dial Lite.json│  ││  └─Pro│      │  Project Dial attiny v2 github.zip &#x2F;&#x2F;Pro打板文件│      │  Project Dial MLB attiny.PcbDoc│      │  Project Dial MLB Gerber.zip│      │  Project Dial MLB LCEDA.json│├─src &#x2F;&#x2F;代码目录│  ├─attiny_fuse_2│  │      attiny_fuse_2.ino &#x2F;&#x2F;熔丝恢复器│  ││  └─Surface_Dial_attiny &#x2F;&#x2F;主体代码目录│      │  Surface_Dial_attiny.ino│      │  Surface_Dial_attiny_Lite.ino│      ││      └─micronucleus-1.11│├─stl model &#x2F;&#x2F;3D打印文件目录│      surface dial t v2.3.STL│      surface dial v2.3.STL│└─tools    └─avrdudess_20191012 &#x2F;&#x2F;工具</code></pre><h4 id="2-购买元器件"><a href="#2-购买元器件" class="headerlink" title="2. 购买元器件"></a>2. 购买元器件</h4><table><thead><tr><th>元器件名</th><th>数量</th></tr></thead><tbody><tr><td>attiny85-20su soic8</td><td>1</td></tr><tr><td>ec11e1834403</td><td>1</td></tr><tr><td>usb type-c 母座 16p 沉板1.6mm</td><td>1</td></tr><tr><td>0603 自恢复保险丝 0.5A 6v</td><td>1</td></tr><tr><td>s0805 J3Y 三极管 SOT-23 <em>可选</em></td><td>1</td></tr><tr><td>0603 1.5k电阻</td><td>1</td></tr><tr><td>0603 4.7k电阻</td><td>3</td></tr><tr><td>0603 5.1k电阻</td><td>2</td></tr><tr><td>0603 66.5欧电阻 <em>可替换为22欧</em></td><td>2</td></tr><tr><td>0603 0.1uf 电容</td><td>1</td></tr><tr><td>0603 4.7uf 电容</td><td>1</td></tr><tr><td>1206 3.6v 齐纳二极管</td><td>2</td></tr><tr><td>M2*6 平头螺丝</td><td>3</td></tr><tr><td>M4*8 圆头螺丝</td><td>3</td></tr><tr><td>0.5mm 硅胶防滑垫</td><td>5*5cm</td></tr><tr><td>48mm 铝合金旋钮帽</td><td>1</td></tr><tr><td>iPhone 7 taptic engine 线性马达 <em>可选</em></td><td>1</td></tr></tbody></table><h4 id="3-打板"><a href="#3-打板" class="headerlink" title="3. 打板"></a>3. 打板</h4><ul><li>用 <code>Gerber_2in1.zip</code><strong>（强烈推荐）</strong><code>Gerber_Project Dial Lite.zip</code> 或 <code>Project Dial attiny v2 github.zip</code> 打板。</li><li>服务商可选择 <a href="sz-jlc.com">嘉立创</a>（因为他家有5元样板服务，5张还包邮）</li><li>尺寸：<code>4x4</code> 或 <code>3.95x4.05</code> cm</li><li>过孔盖油</li><li>其他都选默认</li><li>PS 记得备注两条内容：1. 此项目是开源项目，并非拆单；2. 请勿做半孔处理。</li></ul><h4 id="4-3D打印"><a href="#4-3D打印" class="headerlink" title="4. 3D打印"></a>4. 3D打印</h4><ul><li>把 <code>surface dial t v2.3.STL</code> 和 <code>surface dial v2.3.STL</code> 都打出来。</li><li><strong><em>记得一定要把它翻平再打印！</em></strong></li><li>你可以<del>白嫖</del>使用我们学校的 3D 打印机进行打印。</li></ul><h4 id="5-手工制作"><a href="#5-手工制作" class="headerlink" title="5. 手工制作"></a>5. 手工制作</h4><ul><li>请耐心等待视频教程。</li><li>可以在 <a href="github.com/leostudiooo">GitHub</a> 和 <a href="space.bilibili.com/244815810">哔哩哔哩</a> 上关注我</li><li>个人网站：<a href="leostudiooo.github.io">Github Pages</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;本项目由我和&lt;a href=&quot;https://space.bilibili.com/8555835&quot;&gt;B站UP主 EddyWang&lt;/a&gt;共</summary>
      
    
    
    
    
    <category term="how" scheme="https://leostudiooo.github.io/tags/how/"/>
    
    <category term="surface dial" scheme="https://leostudiooo.github.io/tags/surface-dial/"/>
    
  </entry>
  
  <entry>
    <title>主题【云】部署成功！</title>
    <link href="https://leostudiooo.github.io/2020/06/26/yun/"/>
    <id>https://leostudiooo.github.io/2020/06/26/yun/</id>
    <published>2020-06-26T06:24:48.000Z</published>
    <updated>2021-08-16T08:19:26.492Z</updated>
    
    <content type="html"><![CDATA[<p>好像还有点好看。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;好像还有点好看。&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="celebrate" scheme="https://leostudiooo.github.io/tags/celebrate/"/>
    
  </entry>
  
  <entry>
    <title>9,000-Man-made-Things-Flying-in-Space</title>
    <link href="https://leostudiooo.github.io/2020/05/04/9-000-Man-made-Things-Flying-in-Space/"/>
    <id>https://leostudiooo.github.io/2020/05/04/9-000-Man-made-Things-Flying-in-Space/</id>
    <published>2020-05-04T03:45:20.000Z</published>
    <updated>2021-08-16T08:19:26.484Z</updated>
    
    <content type="html"><![CDATA[<p>Including:</p><table><thead><tr><th align="center">30% of them</th><th align="center">Satellites</th></tr></thead><tbody><tr><td align="center">10% of them</td><td align="center">Spaceships</td></tr><tr><td align="center">The rest of them (60%)</td><td align="center">Space rubbish</td></tr></tbody></table><p>Scientists say that there are 9,000 man-made things flying in space. About 30% of these are satellites, 10% are spaceships and the rest are space rubbish.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Including:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;30% of them&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Satellites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td</summary>
      
    
    
    
    
    <category term="none" scheme="https://leostudiooo.github.io/tags/none/"/>
    
  </entry>
  
  <entry>
    <title>热烈庆祝Hexo部署成功！</title>
    <link href="https://leostudiooo.github.io/2020/05/03/celebrate/"/>
    <id>https://leostudiooo.github.io/2020/05/03/celebrate/</id>
    <published>2020-05-03T12:49:43.000Z</published>
    <updated>2021-08-16T08:19:26.485Z</updated>
    
    <content type="html"><![CDATA[<p>这是我的第一个POST。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是我的第一个POST。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
